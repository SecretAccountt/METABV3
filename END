

local metab_v3 = Instance.new("ScreenGui")
metab_v3.IgnoreGuiInset = false
metab_v3.ResetOnSpawn = true
metab_v3.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
metab_v3.Name = math.random(9999999999, 1000000000)
metab_v3.Parent = game.CoreGui

local cadre = Instance.new("Frame")
cadre.BackgroundColor3 = Color3.new(0, 0, 0)
cadre.BackgroundTransparency = 0.5
cadre.BorderColor3 = Color3.new(0, 0, 0)
cadre.BorderSizePixel = 0
cadre.Position = UDim2.new(0.391021669, 0, 0.213866889, 0)
cadre.Size = UDim2.new(0, 229, 0, 350)
cadre.Visible = true
cadre.Name = "Cadre"
cadre.Parent = metab_v3

local uicorner = Instance.new("UICorner")
uicorner.Parent = cadre

local uistroke = Instance.new("UIStroke")
uistroke.Color = Color3.new(0, 0.666667, 1)
uistroke.Thickness = 4
uistroke.Parent = cadre

local uigradient = Instance.new("UIGradient")
uigradient.Color = ColorSequence.new({ColorSequenceKeypoint.new(0, Color3.new(0, 0, 0)), ColorSequenceKeypoint.new(1, Color3.new(1, 1, 1))})
uigradient.Parent = uistroke

local local_script = Instance.new("LocalScript")
local_script.Parent = uigradient

local text_label = Instance.new("TextLabel")
text_label.Font = Enum.Font.FredokaOne
text_label.Text = "MetabV3"
text_label.TextColor3 = Color3.new(0, 0.666667, 1)
text_label.TextSize = 50
text_label.BackgroundColor3 = Color3.new(1, 1, 1)
text_label.BackgroundTransparency = 1
text_label.BorderColor3 = Color3.new(0, 0, 0)
text_label.BorderSizePixel = 0
text_label.Position = UDim2.new(0.0917030573, 0, 0.0371428579, 0)
text_label.Size = UDim2.new(0, 188, 0, 50)
text_label.Visible = true
text_label.ZIndex = 20
text_label.Parent = cadre

local uigradient_2 = Instance.new("UIGradient")
uigradient_2.Color = ColorSequence.new({ColorSequenceKeypoint.new(0, Color3.new(0, 0, 0)), ColorSequenceKeypoint.new(1, Color3.new(1, 1, 1))})
uigradient_2.Parent = text_label

local local_script_2 = Instance.new("LocalScript")
local_script_2.Parent = uigradient_2

local animation = Instance.new("LocalScript")
animation.Name = "ANIMATION"
animation.Parent = cadre

local billboard_gui = Instance.new("BillboardGui")
billboard_gui.Active = true
billboard_gui.ClipsDescendants = true
billboard_gui.LightInfluence = 1
billboard_gui.Size = UDim2.new(0, 200, 0, 50)
billboard_gui.ResetOnSpawn = true
billboard_gui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
billboard_gui.Parent = animation

local frame = Instance.new("Frame")
frame.BackgroundColor3 = Color3.new(0, 0, 0)
frame.BackgroundTransparency = 0.4000000059604645
frame.BorderColor3 = Color3.new(0, 0, 0)
frame.BorderSizePixel = 0
frame.Position = UDim2.new(0.0164320506, 0, 0.0299038254, 0)
frame.Size = UDim2.new(0, 221, 0, 56)
frame.Visible = true
frame.ZIndex = 12
frame.Parent = cadre

local uicorner_2 = Instance.new("UICorner")
uicorner_2.Parent = frame

local local_script_3 = Instance.new("LocalScript")
local_script_3.Parent = cadre

local antiafk = Instance.new("LocalScript")
antiafk.Name = "ANTI AFK"
antiafk.Parent = cadre

local frame_2 = Instance.new("Frame")
frame_2.BackgroundColor3 = Color3.new(0, 0, 0)
frame_2.BackgroundTransparency = 0.5
frame_2.BorderColor3 = Color3.new(0, 0, 0)
frame_2.BorderSizePixel = 0
frame_2.Position = UDim2.new(0.0164320506, 0, 0.208571389, 0)
frame_2.Size = UDim2.new(0, 221, 0, 271)
frame_2.Visible = true
frame_2.ZIndex = -1
frame_2.Parent = cadre

local uicorner_3 = Instance.new("UICorner")
uicorner_3.Parent = frame_2

local local_script_4 = Instance.new("LocalScript")
local_script_4.Parent = frame_2

local resolve = Instance.new("LocalScript")
resolve.Name = "RESOLVE"
resolve.Parent = cadre

local local_script_5 = Instance.new("LocalScript")
local_script_5.Parent = cadre

local image_label = Instance.new("ImageLabel")
image_label.Image = "rbxassetid://8090393767"
image_label.ImageTransparency = 0.4699999988079071
image_label.ScaleType = Enum.ScaleType.Crop
image_label.BackgroundColor3 = Color3.new(1, 0.956863, 0.956863)
image_label.BackgroundTransparency = 0.949999988079071
image_label.BorderColor3 = Color3.new(1, 0.956863, 0.956863)
image_label.BorderSizePixel = 0
image_label.Position = UDim2.new(0.0164320506, 0, 0.208999977, 0)
image_label.Size = UDim2.new(0, 220, 0, 271)
image_label.Visible = true
image_label.ZIndex = -5
image_label.Parent = cadre

local uicorner_4 = Instance.new("UICorner")
uicorner_4.Parent = image_label

local image_label_2 = Instance.new("ImageLabel")
image_label_2.Image = "rbxassetid://8090393767"
image_label_2.ImageTransparency = 0.18000000715255737
image_label_2.ScaleType = Enum.ScaleType.Crop
image_label_2.BackgroundColor3 = Color3.new(1, 0.956863, 0.956863)
image_label_2.BackgroundTransparency = 1
image_label_2.BorderColor3 = Color3.new(1, 0.956863, 0.956863)
image_label_2.BorderSizePixel = 0
image_label_2.Position = UDim2.new(0.0164320506, 0, 0.0299999993, 0)
image_label_2.Size = UDim2.new(0, 220, 0, 55)
image_label_2.Visible = true
image_label_2.ZIndex = -100
image_label_2.Parent = cadre

local uicorner_5 = Instance.new("UICorner")
uicorner_5.Parent = image_label_2

local local_script_6 = Instance.new("LocalScript")
local_script_6.Parent = cadre

local open = Instance.new("ImageButton")
open.Image = "rbxassetid://9470415937"
open.ResampleMode = Enum.ResamplerMode.Pixelated
open.ScaleType = Enum.ScaleType.Crop
open.TileSize = UDim2.new(300, -10000, 1000, 10000)
open.BackgroundColor3 = Color3.new(0.333333, 0.666667, 1)
open.BorderColor3 = Color3.new(0, 0, 0)
open.BorderSizePixel = 0
open.Position = UDim2.new(0.397580355, 9, -0.0603690445, 0)
open.Size = UDim2.new(0, 27, 0, 25)
open.Visible = true
open.Name = "OPEN"
open.Parent = cadre

local local_script_7 = Instance.new("LocalScript")
local_script_7.Parent = open

local uicorner_6 = Instance.new("UICorner")
uicorner_6.Parent = open

local uistroke_2 = Instance.new("UIStroke")
uistroke_2.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
uistroke_2.Color = Color3.new(0, 0.666667, 1)
uistroke_2.Thickness = 3.0999999046325684
uistroke_2.Parent = open

local uigradient_3 = Instance.new("UIGradient")
uigradient_3.Color = ColorSequence.new({ColorSequenceKeypoint.new(0, Color3.new(0, 0, 0)), ColorSequenceKeypoint.new(1, Color3.new(1, 1, 1))})
uigradient_3.Parent = open

local local_script_8 = Instance.new("LocalScript")
local_script_8.Parent = uigradient_3

local scrolling_frame = Instance.new("ScrollingFrame")
scrolling_frame.AutomaticCanvasSize = Enum.AutomaticSize.XY
scrolling_frame.CanvasSize = UDim2.new(0, 0, 6, 0)
scrolling_frame.ElasticBehavior = Enum.ElasticBehavior.Never
scrolling_frame.ScrollBarImageColor3 = Color3.new(0.333333, 0.666667, 1)
scrolling_frame.ScrollBarThickness = 2
scrolling_frame.Active = true
scrolling_frame.BackgroundColor3 = Color3.new(0, 0, 0)
scrolling_frame.BackgroundTransparency = 1
scrolling_frame.BorderColor3 = Color3.new(0, 0, 0)
scrolling_frame.BorderSizePixel = 0
scrolling_frame.Position = UDim2.new(0.0174672492, 0, 0.208571434, 0)
scrolling_frame.Size = UDim2.new(0, 221, 0, 271)
scrolling_frame.Visible = true
scrolling_frame.Parent = cadre

local diam = Instance.new("TextButton")
diam.Font = Enum.Font.Cartoon
diam.Text = "WALK ON TRY ON"
diam.TextColor3 = Color3.new(0.333333, 0.666667, 1)
diam.TextSize = 25
diam.BackgroundColor3 = Color3.new(0.333333, 0.666667, 1)
diam.BackgroundTransparency = 0.8500000238418579
diam.BorderColor3 = Color3.new(0, 0, 0)
diam.BorderSizePixel = 0
diam.Position = UDim2.new(0.0450000018, 0, 0, 720)
diam.Size = UDim2.new(0, 201, 0, 50)
diam.Visible = true
diam.Name = "Diam"
diam.Parent = scrolling_frame

local uicorner_7 = Instance.new("UICorner")
uicorner_7.Parent = diam

local script = Instance.new("LocalScript")
script.Name = "SCRIPT"
script.Parent = diam

local text_box = Instance.new("TextBox")
text_box.Font = Enum.Font.Cartoon
text_box.Text = "EDIT FLY SPEED"
text_box.TextColor3 = Color3.new(0.333333, 0.666667, 1)
text_box.TextSize = 25
text_box.BackgroundColor3 = Color3.new(0.333333, 0.666667, 1)
text_box.BackgroundTransparency = 0.8500000238418579
text_box.BorderColor3 = Color3.new(0, 0, 0)
text_box.BorderSizePixel = 0
text_box.Position = UDim2.new(0.0450000018, 0, 0, 860)
text_box.Size = UDim2.new(0, 200, 0, 50)
text_box.Visible = true
text_box.Parent = scrolling_frame

local uicorner_8 = Instance.new("UICorner")
uicorner_8.Parent = text_box

local local_script_9 = Instance.new("LocalScript")
local_script_9.Parent = text_box

local auto_farm_lv_l = Instance.new("TextButton")
auto_farm_lv_l.Font = Enum.Font.Cartoon
auto_farm_lv_l.Text = "AUTO FARM LVL (WIN) (x)"
auto_farm_lv_l.TextColor3 = Color3.new(0.333333, 0.666667, 1)
auto_farm_lv_l.TextSize = 18
auto_farm_lv_l.TextWrapped = true
auto_farm_lv_l.BackgroundColor3 = Color3.new(0.333333, 0.666667, 1)
auto_farm_lv_l.BackgroundTransparency = 0.8500000238418579
auto_farm_lv_l.BorderColor3 = Color3.new(0, 0, 0)
auto_farm_lv_l.BorderSizePixel = 0
auto_farm_lv_l.Position = UDim2.new(0.0450000018, 0, 0, 10)
auto_farm_lv_l.Size = UDim2.new(0, 200, 0, 50)
auto_farm_lv_l.Visible = true
auto_farm_lv_l.Name = "AutoFarmLvL"
auto_farm_lv_l.Parent = scrolling_frame

local uicorner_9 = Instance.new("UICorner")
uicorner_9.Parent = auto_farm_lv_l

local script_2 = Instance.new("LocalScript")
script_2.Name = "SCRIPT"
script_2.Parent = auto_farm_lv_l

local uicorner_10 = Instance.new("UICorner")
uicorner_10.CornerRadius = UDim.new(0, 9)
uicorner_10.Parent = scrolling_frame

local diam_2 = Instance.new("TextButton")
diam_2.Font = Enum.Font.Cartoon
diam_2.Text = "RAIMBOW NAME ( pass )"
diam_2.TextColor3 = Color3.new(0.333333, 0.666667, 1)
diam_2.TextSize = 18
diam_2.BackgroundColor3 = Color3.new(0.333333, 0.666667, 1)
diam_2.BackgroundTransparency = 0.8500000238418579
diam_2.BorderColor3 = Color3.new(0, 0, 0)
diam_2.BorderSizePixel = 0
diam_2.ClipsDescendants = true
diam_2.Position = UDim2.new(0.0450000018, 0, 0, 650)
diam_2.Size = UDim2.new(0, 200, 0, 50)
diam_2.Visible = true
diam_2.Name = "Diam"
diam_2.Parent = scrolling_frame

local uicorner_11 = Instance.new("UICorner")
uicorner_11.Parent = diam_2

local script_3 = Instance.new("LocalScript")
script_3.Name = "SCRIPT"
script_3.Parent = diam_2

local diam_3 = Instance.new("TextButton")
diam_3.Font = Enum.Font.Cartoon
diam_3.Text = "AUTO FARM HYGIENE "
diam_3.TextColor3 = Color3.new(0.333333, 0.666667, 1)
diam_3.TextSize = 20
diam_3.TextWrapped = true
diam_3.BackgroundColor3 = Color3.new(0.333333, 0.666667, 1)
diam_3.BackgroundTransparency = 0.8500000238418579
diam_3.BorderColor3 = Color3.new(0, 0, 0)
diam_3.BorderSizePixel = 0
diam_3.Position = UDim2.new(0.0450000018, 0, 0, 500)
diam_3.Size = UDim2.new(0, 200, 0, 50)
diam_3.Visible = true
diam_3.Name = "Diam"
diam_3.Parent = scrolling_frame

local uicorner_12 = Instance.new("UICorner")
uicorner_12.Parent = diam_3

local script_4 = Instance.new("LocalScript")
script_4.Name = "SCRIPT"
script_4.Parent = diam_3

local diam_4 = Instance.new("TextButton")
diam_4.Font = Enum.Font.Cartoon
diam_4.Text = "AUTO DETECT AND COLLECT CHEST"
diam_4.TextColor3 = Color3.new(0.333333, 0.666667, 1)
diam_4.TextSize = 12
diam_4.BackgroundColor3 = Color3.new(0.333333, 0.666667, 1)
diam_4.BackgroundTransparency = 0.8500000238418579
diam_4.BorderColor3 = Color3.new(0, 0, 0)
diam_4.BorderSizePixel = 0
diam_4.Position = UDim2.new(0.0450000018, 0, 0, 220)
diam_4.Size = UDim2.new(0, 200, 0, 50)
diam_4.Visible = true
diam_4.Name = "Diam"
diam_4.Parent = scrolling_frame

local uicorner_13 = Instance.new("UICorner")
uicorner_13.Parent = diam_4

local script_5 = Instance.new("LocalScript")
script_5.Name = "SCRIPT"
script_5.Parent = diam_4

local diam_5 = Instance.new("TextButton")
diam_5.Font = Enum.Font.Cartoon
diam_5.Text = "SECRET DOOR RH3"
diam_5.TextColor3 = Color3.new(0.333333, 0.666667, 1)
diam_5.TextSize = 25
diam_5.AutomaticSize = Enum.AutomaticSize.XY
diam_5.BackgroundColor3 = Color3.new(0.333333, 0.666667, 1)
diam_5.BackgroundTransparency = 0.8500000238418579
diam_5.BorderColor3 = Color3.new(0, 0, 0)
diam_5.BorderSizePixel = 0
diam_5.Position = UDim2.new(0.0450000018, 0, 0, 570)
diam_5.Size = UDim2.new(0, 201, 0, 50)
diam_5.Visible = true
diam_5.Name = "Diam"
diam_5.Parent = scrolling_frame

local uicorner_14 = Instance.new("UICorner")
uicorner_14.Parent = diam_5

local script_6 = Instance.new("LocalScript")
script_6.Name = "SCRIPT"
script_6.Parent = diam_5

local auto_farm_lv_l_2 = Instance.new("TextButton")
auto_farm_lv_l_2.Font = Enum.Font.Cartoon
auto_farm_lv_l_2.Text = "AUTO FARM LVL (SAFE) (x)"
auto_farm_lv_l_2.TextColor3 = Color3.new(0.333333, 0.666667, 1)
auto_farm_lv_l_2.TextSize = 18
auto_farm_lv_l_2.TextWrapped = true
auto_farm_lv_l_2.BackgroundColor3 = Color3.new(0.333333, 0.666667, 1)
auto_farm_lv_l_2.BackgroundTransparency = 0.8500000238418579
auto_farm_lv_l_2.BorderColor3 = Color3.new(0, 0, 0)
auto_farm_lv_l_2.BorderSizePixel = 0
auto_farm_lv_l_2.Position = UDim2.new(0.0450000018, 0, 0, 80)
auto_farm_lv_l_2.Size = UDim2.new(0, 200, 0, 50)
auto_farm_lv_l_2.Visible = true
auto_farm_lv_l_2.Name = "AutoFarmLvL"
auto_farm_lv_l_2.Parent = scrolling_frame

local uicorner_15 = Instance.new("UICorner")
uicorner_15.Parent = auto_farm_lv_l_2

local script_7 = Instance.new("LocalScript")
script_7.Name = "SCRIPT"
script_7.Parent = auto_farm_lv_l_2

local uigradient_4 = Instance.new("UIGradient")
uigradient_4.Color = ColorSequence.new({ColorSequenceKeypoint.new(0, Color3.new(0, 0, 0)), ColorSequenceKeypoint.new(1, Color3.new(1, 1, 1))})
uigradient_4.Parent = scrolling_frame

local local_script_10 = Instance.new("LocalScript")
local_script_10.Parent = uigradient_4

local diam_6 = Instance.new("TextButton")
diam_6.Font = Enum.Font.Cartoon
diam_6.Text = "COPY PLAYERS NAME"
diam_6.TextColor3 = Color3.new(0.333333, 0.666667, 1)
diam_6.TextSize = 20
diam_6.TextWrapped = true
diam_6.BackgroundColor3 = Color3.new(0.333333, 0.666667, 1)
diam_6.BackgroundTransparency = 0.8500000238418579
diam_6.BorderColor3 = Color3.new(0, 0, 0)
diam_6.BorderSizePixel = 0
diam_6.ClipsDescendants = true
diam_6.Position = UDim2.new(0.0450000018, 0, 0, 790)
diam_6.Size = UDim2.new(0, 200, 0, 50)
diam_6.Visible = true
diam_6.Name = "Diam"
diam_6.Parent = scrolling_frame

local uicorner_16 = Instance.new("UICorner")
uicorner_16.Parent = diam_6

local script_8 = Instance.new("LocalScript")
script_8.Name = "SCRIPT"
script_8.Parent = diam_6

local diam_7 = Instance.new("TextButton")
diam_7.Font = Enum.Font.Cartoon
diam_7.Text = "AUTO FARM DIAMOND"
diam_7.TextColor3 = Color3.new(0.333333, 0.666667, 1)
diam_7.TextSize = 20
diam_7.BackgroundColor3 = Color3.new(0.333333, 0.666667, 1)
diam_7.BackgroundTransparency = 0.8500000238418579
diam_7.BorderColor3 = Color3.new(0, 0, 0)
diam_7.BorderSizePixel = 0
diam_7.Position = UDim2.new(0.0450000018, 0, 0, 150)
diam_7.Size = UDim2.new(0, 200, 0, 50)
diam_7.Visible = true
diam_7.Name = "Diam"
diam_7.Parent = scrolling_frame

local uicorner_17 = Instance.new("UICorner")
uicorner_17.Parent = diam_7

local script_9 = Instance.new("LocalScript")
script_9.Name = "SCRIPT"
script_9.Parent = diam_7

local text_box_2 = Instance.new("TextBox")
text_box_2.Font = Enum.Font.Cartoon
text_box_2.Text = "LOUD SPEAKER"
text_box_2.TextColor3 = Color3.new(0.333333, 0.666667, 1)
text_box_2.TextSize = 28
text_box_2.BackgroundColor3 = Color3.new(0.333333, 0.666667, 1)
text_box_2.BackgroundTransparency = 0.8500000238418579
text_box_2.BorderColor3 = Color3.new(0, 0, 0)
text_box_2.BorderSizePixel = 0
text_box_2.Position = UDim2.new(0.0450000018, 0, 0, 930)
text_box_2.Size = UDim2.new(0, 200, 0, 50)
text_box_2.Visible = true
text_box_2.Parent = scrolling_frame

local uicorner_18 = Instance.new("UICorner")
uicorner_18.Parent = text_box_2

local local_script_11 = Instance.new("LocalScript")
local_script_11.Parent = text_box_2

local diam_8 = Instance.new("TextButton")
diam_8.Font = Enum.Font.Cartoon
diam_8.Text = "AUTO FOUNTAIN (beta) (x)"
diam_8.TextColor3 = Color3.new(0.333333, 0.666667, 1)
diam_8.TextSize = 19
diam_8.TextWrapped = true
diam_8.BackgroundColor3 = Color3.new(0.333333, 0.666667, 1)
diam_8.BackgroundTransparency = 0.8500000238418579
diam_8.BorderColor3 = Color3.new(0, 0, 0)
diam_8.BorderSizePixel = 0
diam_8.Position = UDim2.new(0.0450000018, 0, 0, 290)
diam_8.Size = UDim2.new(0, 200, 0, 50)
diam_8.Visible = true
diam_8.Name = "Diam"
diam_8.Parent = scrolling_frame

local uicorner_19 = Instance.new("UICorner")
uicorner_19.Parent = diam_8

local script_10 = Instance.new("LocalScript")
script_10.Name = "SCRIPT"
script_10.Parent = diam_8

local diam_9 = Instance.new("TextButton")
diam_9.Font = Enum.Font.Cartoon
diam_9.Text = "AUTO FARM SLEEP (x)"
diam_9.TextColor3 = Color3.new(0.333333, 0.666667, 1)
diam_9.TextSize = 23
diam_9.TextWrapped = true
diam_9.BackgroundColor3 = Color3.new(0.333333, 0.666667, 1)
diam_9.BackgroundTransparency = 0.8500000238418579
diam_9.BorderColor3 = Color3.new(0, 0, 0)
diam_9.BorderSizePixel = 0
diam_9.Position = UDim2.new(0.0450000018, 0, 0, 360)
diam_9.Size = UDim2.new(0, 200, 0, 50)
diam_9.Visible = true
diam_9.Name = "Diam"
diam_9.Parent = scrolling_frame

local uicorner_20 = Instance.new("UICorner")
uicorner_20.Parent = diam_9

local script_11 = Instance.new("LocalScript")
script_11.Name = "SCRIPT"
script_11.Parent = diam_9

local diam_10 = Instance.new("TextButton")
diam_10.Font = Enum.Font.Cartoon
diam_10.Text = "AUTO FARM HUNGERS "
diam_10.TextColor3 = Color3.new(0.333333, 0.666667, 1)
diam_10.TextSize = 20
diam_10.TextWrapped = true
diam_10.BackgroundColor3 = Color3.new(0.333333, 0.666667, 1)
diam_10.BackgroundTransparency = 0.8500000238418579
diam_10.BorderColor3 = Color3.new(0, 0, 0)
diam_10.BorderSizePixel = 0
diam_10.Position = UDim2.new(0.0450000018, 0, 0, 430)
diam_10.Size = UDim2.new(0, 200, 0, 50)
diam_10.Visible = true
diam_10.Name = "Diam"
diam_10.Parent = scrolling_frame

local uicorner_21 = Instance.new("UICorner")
uicorner_21.Parent = diam_10

local script_12 = Instance.new("LocalScript")
script_12.Name = "SCRIPT"
script_12.Parent = diam_10

local dmd_c = Instance.new("TextLabel")
dmd_c.Font = Enum.Font.LuckiestGuy
dmd_c.Text = "Nombre de diamant : 5"
dmd_c.TextColor3 = Color3.new(0.333333, 0.666667, 1)
dmd_c.TextSize = 12
dmd_c.BackgroundColor3 = Color3.new(0, 0, 0)
dmd_c.BackgroundTransparency = 0.8500000238418579
dmd_c.BorderColor3 = Color3.new(0.333333, 0.666667, 1)
dmd_c.BorderMode = Enum.BorderMode.Middle
dmd_c.Position = UDim2.new(0.0117138354, 0, 0.163398698, 0)
dmd_c.Size = UDim2.new(0, 168, 0, 50)
dmd_c.Visible = true
dmd_c.Name = "DmdC"
dmd_c.Parent = metab_v3

local local_script_12 = Instance.new("LocalScript")
local_script_12.Parent = dmd_c

local frame_3 = Instance.new("Frame")
frame_3.BackgroundColor3 = Color3.new(0, 0.666667, 1)
frame_3.BorderColor3 = Color3.new(0, 0, 0)
frame_3.BorderSizePixel = 0
frame_3.Position = UDim2.new(-4.54130635e-08, 0, 0.887881637, 0)
frame_3.Size = UDim2.new(0, 168, 0, 5)
frame_3.Visible = true
frame_3.Parent = dmd_c

local uigradient_5 = Instance.new("UIGradient")
uigradient_5.Color = ColorSequence.new({ColorSequenceKeypoint.new(0, Color3.new(0, 0, 0)), ColorSequenceKeypoint.new(1, Color3.new(1, 1, 1))})
uigradient_5.Parent = frame_3

local local_script_13 = Instance.new("LocalScript")
local_script_13.Parent = uigradient_5

local chest = Instance.new("TextLabel")
chest.Font = Enum.Font.LuckiestGuy
chest.Text = "detected chest :"
chest.TextColor3 = Color3.new(0.333333, 0.666667, 1)
chest.TextSize = 14
chest.BackgroundColor3 = Color3.new(0, 0, 0)
chest.BackgroundTransparency = 0.8500000238418579
chest.BorderColor3 = Color3.new(0.333333, 0.666667, 1)
chest.BorderMode = Enum.BorderMode.Middle
chest.Position = UDim2.new(0.0117947543, 0, 0.0522875823, 0)
chest.Size = UDim2.new(0, 168, 0, 50)
chest.Visible = true
chest.Name = "Chest"
chest.Parent = metab_v3

local local_script_14 = Instance.new("LocalScript")
local_script_14.Parent = chest

local frame_4 = Instance.new("Frame")
frame_4.BackgroundColor3 = Color3.new(0, 0.666667, 1)
frame_4.BorderColor3 = Color3.new(0, 0, 0)
frame_4.BorderSizePixel = 0
frame_4.Position = UDim2.new(-4.54130635e-08, 0, 0.887881637, 0)
frame_4.Size = UDim2.new(0, 168, 0, 5)
frame_4.Visible = true
frame_4.Parent = chest

local uigradient_6 = Instance.new("UIGradient")
uigradient_6.Color = ColorSequence.new({ColorSequenceKeypoint.new(0, Color3.new(0, 0, 0)), ColorSequenceKeypoint.new(1, Color3.new(1, 1, 1))})
uigradient_6.Parent = frame_4

local local_script_15 = Instance.new("LocalScript")
local_script_15.Parent = uigradient_6

local text_button1 = Instance.new("TextButton")
text_button1.Font = Enum.Font.Arial
text_button1.MaxVisibleGraphemes = 1
text_button1.Text = "o"
text_button1.TextColor3 = Color3.new(0, 0, 0)
text_button1.TextSize = 15
text_button1.TextWrapped = true
text_button1.BackgroundColor3 = Color3.new(0.333333, 0.666667, 1)
text_button1.BorderColor3 = Color3.new(0, 0, 0)
text_button1.BorderSizePixel = 0
text_button1.Position = UDim2.new(0.0189999994, 0, 0.228, 0)
text_button1.Size = UDim2.new(0, 22, 0, 16)
text_button1.Visible = false
text_button1.Name = "TextButton1"
text_button1.Parent = metab_v3

local local_script_16 = Instance.new("LocalScript")
local_script_16.Parent = text_button1

local uistroke_3 = Instance.new("UIStroke")
uistroke_3.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
uistroke_3.Color = Color3.new(0, 0.666667, 0.784314)
uistroke_3.Thickness = 3.0999999046325684
uistroke_3.Parent = text_button1

local uicorner_22 = Instance.new("UICorner")
uicorner_22.CornerRadius = UDim.new(0, 4)
uicorner_22.Parent = text_button1

local open_2 = Instance.new("ImageButton")
open_2.Image = "rbxassetid://9470415937"
open_2.ResampleMode = Enum.ResamplerMode.Pixelated
open_2.ScaleType = Enum.ScaleType.Crop
open_2.BackgroundColor3 = Color3.new(0.333333, 0.666667, 1)
open_2.BorderColor3 = Color3.new(0, 0, 0)
open_2.BorderSizePixel = 0
open_2.Position = UDim2.new(0.043551784, 9, 0.221470609, 0)
open_2.Size = UDim2.new(0, 27, 0, 25)
open_2.Visible = true
open_2.ZIndex = 5
open_2.Name = "OPEN"
open_2.Parent = metab_v3

local local_script_17 = Instance.new("LocalScript")
local_script_17.Parent = open_2

local uicorner_23 = Instance.new("UICorner")
uicorner_23.Parent = open_2

local uistroke_4 = Instance.new("UIStroke")
uistroke_4.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
uistroke_4.Color = Color3.new(0, 0.666667, 0.784314)
uistroke_4.Thickness = 3.0999999046325684
uistroke_4.Parent = open_2

local uigradient_7 = Instance.new("UIGradient")
uigradient_7.Color = ColorSequence.new({ColorSequenceKeypoint.new(0, Color3.new(0, 0, 0)), ColorSequenceKeypoint.new(1, Color3.new(1, 1, 1))})
uigradient_7.Parent = open_2

local local_script_18 = Instance.new("LocalScript")
local_script_18.Parent = uigradient_7

local text_button = Instance.new("TextButton")
text_button.Font = Enum.Font.Creepster
text_button.Text = "X"
text_button.TextColor3 = Color3.new(0, 0, 0)
text_button.TextSize = 12
text_button.TextWrapped = true
text_button.BackgroundColor3 = Color3.new(0.333333, 0.666667, 1)
text_button.BorderColor3 = Color3.new(0, 0, 0)
text_button.BorderSizePixel = 0
text_button.Position = UDim2.new(0.0191548467, 0, 0.227768123, 0)
text_button.Size = UDim2.new(0, 22, 0, 16)
text_button.Visible = true
text_button.ZIndex = 5
text_button.Parent = metab_v3

local local_script_19 = Instance.new("LocalScript")
local_script_19.Parent = text_button

local uicorner_24 = Instance.new("UICorner")
uicorner_24.CornerRadius = UDim.new(0, 4)
uicorner_24.Parent = text_button

local uistroke_5 = Instance.new("UIStroke")
uistroke_5.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
uistroke_5.Color = Color3.new(0, 0.666667, 0.784314)
uistroke_5.Thickness = 3.0999999046325684
uistroke_5.Parent = text_button

local text_button_2 = Instance.new("TextButton")
text_button_2.Font = Enum.Font.FredokaOne
text_button_2.Text = "FLY"
text_button_2.TextColor3 = Color3.new(0, 0, 0)
text_button_2.TextSize = 12
text_button_2.TextWrapped = true
text_button_2.BackgroundColor3 = Color3.new(0, 0.666667, 1)
text_button_2.BorderColor3 = Color3.new(0, 0, 0)
text_button_2.BorderSizePixel = 0
text_button_2.Position = UDim2.new(0.0855809301, 0, 0.226134151, 0)
text_button_2.Size = UDim2.new(0, 36, 0, 16)
text_button_2.Visible = true
text_button_2.ZIndex = 5
text_button_2.Parent = metab_v3

local local_script_20 = Instance.new("LocalScript")
local_script_20.Parent = text_button_2

local uistroke_6 = Instance.new("UIStroke")
uistroke_6.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
uistroke_6.Color = Color3.new(0, 0.666667, 0.784314)
uistroke_6.Thickness = 3.0999999046325684
uistroke_6.Parent = text_button_2

local uicorner_25 = Instance.new("UICorner")
uicorner_25.CornerRadius = UDim.new(0, 4)
uicorner_25.Parent = text_button_2

local text_button_3 = Instance.new("TextButton")
text_button_3.Font = Enum.Font.FredokaOne
text_button_3.Text = "UFO"
text_button_3.TextColor3 = Color3.new(0, 0, 0)
text_button_3.TextSize = 12
text_button_3.TextWrapped = true
text_button_3.BackgroundColor3 = Color3.new(0.333333, 0.666667, 1)
text_button_3.BorderColor3 = Color3.new(0, 0, 0)
text_button_3.BorderSizePixel = 0
text_button_3.Position = UDim2.new(0.019148374, 0, 0.115023047, 0)
text_button_3.Size = UDim2.new(0, 36, 0, 16)
text_button_3.Visible = true
text_button_3.ZIndex = 5
text_button_3.Parent = metab_v3

local local_script_21 = Instance.new("LocalScript")
local_script_21.Parent = text_button_3

local uistroke_7 = Instance.new("UIStroke")
uistroke_7.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
uistroke_7.Color = Color3.new(0, 0.666667, 0.784314)
uistroke_7.Thickness = 3.0999999046325684
uistroke_7.Parent = text_button_3

local uicorner_26 = Instance.new("UICorner")
uicorner_26.CornerRadius = UDim.new(0, 4)
uicorner_26.Parent = text_button_3

--//Modules

local modules = {}

--// Scripts

-- LocalScript
task.spawn(function()
	local script = local_script

	local oldreq = require
	local function require(target)
		if modules[target] then
			return modules[target]()
		end
		return oldreq(target)
	end

	-- Paramètres de l'animation
	local color1 = Color3.fromRGB(0, 0, 0) -- Bleu ciel
	local color2 = Color3.fromRGB(0, 170, 255) -- Bleu marin
	local duration = 2 -- Durée d'une boucle d'animation en secondes
	local frequency = 1 -- Fréquence des boucles d'animation (nombre de boucles par seconde)
	
	-- Trouver l'objet (Brick) à animer
	local object = script.Parent -- Changer en fonction de l'objet cible
	
	-- Fonction d'animation
	local function animateColor()
		local startTime = tick()
		while true do
			local currentTime = tick() - startTime
			local t = math.sin(2 * math.pi * frequency * currentTime / duration)
	
			local lerpedColor = color1:Lerp(color2, t)
			object.Color = ColorSequence.new(lerpedColor)
	
			wait(0.03) -- Attendre un court instant avant de mettre à jour la couleur
		end
	end
	
	-- Lancer l'animation
	animateColor()
	
end)

-- LocalScript
task.spawn(function()
	local script = local_script_2

	local oldreq = require
	local function require(target)
		if modules[target] then
			return modules[target]()
		end
		return oldreq(target)
	end

	-- Paramètres de l'animation
	local color1 = Color3.fromRGB(0, 0, 0) -- Bleu ciel
	local color2 = Color3.fromRGB(0, 170, 255) -- Bleu marin
	local duration = 2 -- Durée d'une boucle d'animation en secondes
	local frequency = 1 -- Fréquence des boucles d'animation (nombre de boucles par seconde)
	
	-- Trouver l'objet (Brick) à animer
	local object = script.Parent -- Changer en fonction de l'objet cible
	
	-- Fonction d'animation
	local function animateColor()
		local startTime = tick()
		while true do
			local currentTime = tick() - startTime
			local t = math.sin(2 * math.pi * frequency * currentTime / duration)
	
			local lerpedColor = color1:Lerp(color2, t)
			object.Color = ColorSequence.new(lerpedColor)
	
			wait(0.03) -- Attendre un court instant avant de mettre à jour la couleur
		end
	end
	
	-- Lancer l'animation
	animateColor()
	
end)

-- ANIMATION
task.spawn(function()
	local script = animation

	local oldreq = require
	local function require(target)
		if modules[target] then
			return modules[target]()
		end
		return oldreq(target)
	end

	local UserInputService = game:GetService("UserInputService")
	local runService = (game:GetService("RunService"));
	
	local gui = script.Parent
	
	local dragging
	local dragInput
	local dragStart
	local startPos
	
	function Lerp(a, b, m)
		return a + (b - a) * m
	end;
	
	local lastMousePos
	local lastGoalPos
	local DRAG_SPEED = (8); -- // The speed of the UI darg.
	function Update(dt)
		if not (startPos) then return end;
		if not (dragging) and (lastGoalPos) then
			gui.Position = UDim2.new(startPos.X.Scale, Lerp(gui.Position.X.Offset, lastGoalPos.X.Offset, dt * DRAG_SPEED), startPos.Y.Scale, Lerp(gui.Position.Y.Offset, lastGoalPos.Y.Offset, dt * DRAG_SPEED))
			return 
		end;
	
		local delta = (lastMousePos - UserInputService:GetMouseLocation())
		local xGoal = (startPos.X.Offset - delta.X);
		local yGoal = (startPos.Y.Offset - delta.Y);
		lastGoalPos = UDim2.new(startPos.X.Scale, xGoal, startPos.Y.Scale, yGoal)
		gui.Position = UDim2.new(startPos.X.Scale, Lerp(gui.Position.X.Offset, xGoal, dt * DRAG_SPEED), startPos.Y.Scale, Lerp(gui.Position.Y.Offset, yGoal, dt * DRAG_SPEED))
	end;
	
	gui.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPos = gui.Position
			lastMousePos = UserInputService:GetMouseLocation()
	
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)
	
	gui.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			dragInput = input
		end
	end)
	
	runService.Heartbeat:Connect(Update)
end)

-- LocalScript
task.spawn(function()
	local script = local_script_3

	local oldreq = require
	local function require(target)
		if modules[target] then
			return modules[target]()
		end
		return oldreq(target)
	end

	local successRainbow, errRainbow = pcall(function()
		game:GetService("Players").LocalPlayer.PlayerGui.QuestUI.LevelRewardPopUp.Rainbow:Destroy()
	end)
	
	local successStar, errStar = pcall(function()
		game:GetService("Players").LocalPlayer.PlayerGui.QuestUI.LevelRewardPopUp.Star:Destroy()
	end)
	
	local successStar1, errStar1 = pcall(function()
		game:GetService("Players").LocalPlayer.PlayerGui.QuestUI.LevelRewardPopUp.Sparkles:Destroy()
	end)
	
	local successStar2, errStar2 = pcall(function()
		game:GetService("Players").LocalPlayer.PlayerGui.QuestUI.LevelRewardPopUp.Background:Destroy()
	end)
	
	local successStar3, errStar3 = pcall(function()
		game:GetService("Players").LocalPlayer.PlayerGui.MusicalChairsGame.Results.ImageLabel:Destroy()
	end)
	
	local successStar4, errStar4 = pcall(function()
		game:GetService("Players").LocalPlayer.PlayerGui.MusicalChairsGame.Results.Close:Destroy()
	end)
	
	
end)

-- ANTI AFK
task.spawn(function()
	local script = antiafk

	local oldreq = require
	local function require(target)
		if modules[target] then
			return modules[target]()
		end
		return oldreq(target)
	end

	local VirtualUser = game:GetService('VirtualUser')
	local Players = game:GetService('Players')
	
	Players.LocalPlayer.Idled:connect(function()
		VirtualUser:CaptureController()
		VirtualUser:ClickButton2(Vector2.new())
		wait(2)
	end)
end)

-- LocalScript
task.spawn(function()
	local script = local_script_4

	local oldreq = require
	local function require(target)
		if modules[target] then
			return modules[target]()
		end
		return oldreq(target)
	end

	local avatarURL = "https://www.roblox.com/Thumbs/Avatar.ashx?x=150&y=150&format=png&userId=3299324273"
	
	local parentFrame = script.Parent
	
	-- Crée une instance d'ImageLabel pour l'avatar
	local avatarLabel = Instance.new("ImageLabel")
	avatarLabel.Size = UDim2.new(0, 150, 0, 150)
	avatarLabel.AnchorPoint = Vector2.new(0, 0) -- Ancré en haut à gauche
	avatarLabel.Image = avatarURL
	avatarLabel.BackgroundTransparency = 1 -- Rend le contour de l'image invisible
	avatarLabel.Parent = parentFrame
	
	-- Crée des instances de lignes transparentes pour l'effet de glitch
	local glitchLines = {}
	for i = 1, 20 do
		local line = Instance.new("Frame")
		line.Size = UDim2.new(0, math.random(50, 150), 0, math.random(1, 3)) -- Taille de la ligne
		line.Position = UDim2.new(0, (avatarLabel.Size.X.Offset - line.Size.X.Offset) / 2, 0, math.random(0, 150)) -- Position centrée en X, aléatoire en Y
		line.BackgroundColor3 = Color3.new(math.random(), math.random(), math.random()) -- Couleur aléatoire
		line.BackgroundTransparency = 0.5 -- Transparence
		line.Parent = avatarLabel
		table.insert(glitchLines, line)
	end
	
	local function toggleVisibility()
		avatarLabel.Visible = not avatarLabel.Visible
	end
	
	-- Fonction pour animer l'avatar avec effet de glitch, déplacement aléatoire, disparition/réapparition, tremblement et effet de ligne
	local function animateAvatar()
		while true do
			local targetX = math.random(0, parentFrame.AbsoluteSize.x - 150)
			local targetY = math.random(0, parentFrame.AbsoluteSize.y - 150)
	
			local offsetX = (targetX - avatarLabel.Position.X.Offset) / 10
			local offsetY = (targetY - avatarLabel.Position.Y.Offset) / 10
	
			avatarLabel.Position = UDim2.new(0, avatarLabel.Position.X.Offset + offsetX, 0, avatarLabel.Position.Y.Offset + offsetY)
	
			-- Effet de glitch sur les lignes
			for _, line in ipairs(glitchLines) do
				line.Size = UDim2.new(0, math.random(50, 150), 0, math.random(1, 3)) -- Taille de la ligne
				line.Position = UDim2.new(0, (avatarLabel.Size.X.Offset - line.Size.X.Offset) / 2, 0, math.random(0, 150)) -- Position centrée en X, aléatoire en Y
				line.BackgroundColor3 = Color3.new(math.random(), math.random(), math.random()) -- Couleur aléatoire
			end
	
			-- Effet glitch : Inverser les couleurs de manière aléatoire
			if math.random() < 0.1 then
				avatarLabel.ImageColor3 = Color3.new(math.random(), math.random(), math.random())
			else
				avatarLabel.ImageColor3 = Color3.new(1, 0, 0.0156863)
			end
	
			-- Disparition/réapparition aléatoire
			if math.random() < 0.05 then
				toggleVisibility()
			end
	
			-- Effet de tremblement aléatoire
			if math.random() < 0.1 then
				local trembleAmount = math.random(5, 10)
				avatarLabel.Position = UDim2.new(
					0,
					avatarLabel.Position.X.Offset + math.random(-trembleAmount, trembleAmount),
					0,
					avatarLabel.Position.Y.Offset + math.random(-trembleAmount, trembleAmount)
				)
			end
	
			wait(0.05) -- Délai entre chaque déplacement, effet de glitch, disparition/réapparition, tremblement et effet de ligne
		end
	end
	
	-- Lancer l'animation
	animateAvatar()
	
	
end)

-- RESOLVE
task.spawn(function()
	local script = resolve

	local oldreq = require
	local function require(target)
		if modules[target] then
			return modules[target]()
		end
		return oldreq(target)
	end

	-- Fonction pour chercher un enfant avec le nom "dmdc" dans tous les enfants de CoreGui
	local function trouverEnfantDmdc()
		for _, enfant in pairs(game.CoreGui:GetChildren()) do
			if enfant:FindFirstChild("dmdc") then
				return enfant
			end
		end
		return nil
	end
	
	local Player = game:GetService("Players").LocalPlayer
	local CaptchaGui = Player.PlayerGui.CaptchaGui
	local FloatArea = CaptchaGui.Captcha.FloatArea
	
	local System = {
		"MouseButton1Down",
		"Activated",
		"MouseButton1Click"
	}
	
	while true do
		local floatAreaChildren = FloatArea:GetChildren()
	
		-- Vérifiez si FloatArea a plus d'un enfant
		if #floatAreaChildren > 1 then
			for i, x in ipairs(floatAreaChildren) do
				if x:IsA("TextButton") then
					for _, eventName in ipairs(System) do
						game:GetService("VirtualInputManager"):SendMouseButtonEvent(x.AbsolutePosition.X + x.AbsoluteSize.X / 2, 
						x.AbsolutePosition.Y + 50,
						0,
						true,
						FloatArea,
						1
						)
	
						wait(0.1)
	
						game:GetService("VirtualInputManager"):SendMouseButtonEvent(x.AbsolutePosition.X + x.AbsoluteSize.X / 2,
						x.AbsolutePosition.Y + 50,
						0,
						false,
						FloatArea,
						1
						)
	
						wait(0.5)
					end
				end
			end
	
			-- Appel de la fonction pour trouver l'enfant après avoir vérifié les boutons de texte.
			local metabv3 = trouverEnfantDmdc()
	
			if metabv3 then
	
				-- Désactiver l'enfant
				metabv3.Enabled = false
	
				-- Attente de 2 secondes avant de réactiver
				wait(2)
	
				metabv3.Enabled = true
			end
		end
	
		wait(1)  -- Attendez un moment avant de répéter la vérification.
	end
end)

-- LocalScript
task.spawn(function()
	local script = local_script_5

	local oldreq = require
	local function require(target)
		if modules[target] then
			return modules[target]()
		end
		return oldreq(target)
	end

	for i,v in pairs(game:GetDescendants()) do
		if v.Name == "FoliageMovementV1.1" then
			v:Destroy()
		end
	end
end)

-- LocalScript
task.spawn(function()
	local script = local_script_6

	local oldreq = require
	local function require(target)
		if modules[target] then
			return modules[target]()
		end
		return oldreq(target)
	end

	if _G.LVL then
	
	local TeleportService = game:GetService("TeleportService")
	local Players = game:GetService("Players")
	local player = Players.LocalPlayer
	local destinationPlaceId = 1067560271
	
	if game.PlaceId ~= destinationPlaceId then
		-- Téléportez le joueur vers le nouveau monde
		TeleportService:Teleport(destinationPlaceId, player)
	end
	
	local function onCharacterAdded(character)
	
		local player = game.Players.LocalPlayer
	
		local playAreaBrick = game.Workspace:FindFirstChild("PlayAreaCollisionBrick")
		local distanceThreshold = 10
	
		if playAreaBrick then
			local distance = (player.Character.HumanoidRootPart.Position - playAreaBrick.Position).Magnitude
			local ready = distance > distanceThreshold
	
			if ready then
				-- Destruction of UI elements
				local successRainbow, errRainbow = pcall(function()
					game:GetService("Players").LocalPlayer.PlayerGui.QuestUI.LevelRewardPopUp.Rainbow:Destroy()
				end)
				-- ... similar destruction for other UI elements ...
	
				local GameSeat = "GameSeat"
				local PlayAreaCollisionBrick = game.Workspace.PlayAreaCollisionBrick
	
				local function isCharacterInPlayArea()
					local character = player.Character
					if character then
						local rootPart = character:FindFirstChild("HumanoidRootPart")
						if rootPart then
							local characterPosition = rootPart.Position
							local distanceToBrick = (characterPosition - PlayAreaCollisionBrick.Position).Magnitude
							local tolerance = 2
							return distanceToBrick <= (PlayAreaCollisionBrick.Size / 2.5).Magnitude + tolerance
						end
					end
					return false
				end
	
				local function checkAndChangeGame()
					local localPlayer = game.Players.LocalPlayer
					local localPlayerName = localPlayer.Name
					local latestGameWinnerText = game.Workspace.Whiteboard.SurfaceGui.Frame.LatestGameWinner.Text
	
					if latestGameWinnerText == localPlayerName then
	
						game:GetService("TeleportService"):Teleport(4728134592, LocalPlayer)
	
	
	
					end
				end
	
				while true do
					checkAndChangeGame()
					if isCharacterInPlayArea() then
						local suitableSeat = nil
						for _, object in pairs(game:GetDescendants()) do
							if object:IsA("Seat") then
								local seatName = object.Name
								if seatName == GameSeat then
									suitableSeat = object
									break
								end
							end
						end
	
						if suitableSeat then
							player.Character.HumanoidRootPart.CFrame = suitableSeat.CFrame
						end
					end
					wait(0.1)
				end
			end
		end
	end
	
	if player.Character then
		onCharacterAdded(player.Character)
	end
	
	player.CharacterAdded:Connect(onCharacterAdded)
	
	
	
	
	
	
	
	
	
	
	
	
	local Players = game:GetService("Players")
	local player = Players.LocalPlayer
	local TeleportService = game:GetService("TeleportService")
	local destinationPlaceId = 1067560271
	
	if game.PlaceId ~= destinationPlaceId then
		TeleportService:Teleport(destinationPlaceId, player)
	end
	
	local function onCharacterAdded(character)
		local playAreaBrick = game.Workspace:FindFirstChild("PlayAreaCollisionBrick")
		local distanceThreshold = 10
	
		if playAreaBrick then
			local distance = (character.HumanoidRootPart.Position - playAreaBrick.Position).Magnitude
			local ready = distance > distanceThreshold
	
			if ready then
				local successRainbow, errRainbow = pcall(function()
					game:GetService("Players").LocalPlayer.PlayerGui.QuestUI.LevelRewardPopUp.Rainbow:Destroy()
				end)
				while true do
					checkAndChangeGame()
					if isCharacterInPlayArea() then
						local suitableSeat = nil
						for _, object in pairs(game:GetDescendants()) do
							if object:IsA("Seat") then
								local seatName = object.Name
								if seatName == GameSeat then
									suitableSeat = object
									break
								end
							end
						end
	
						if suitableSeat then
							player.Character.HumanoidRootPart.CFrame = suitableSeat.CFrame
						end
					end				wait(0.1)
				end
			end
		end
	end
	
	if player.Character then
		onCharacterAdded(player.Character)
	end
	
	player.CharacterAdded:Connect(onCharacterAdded)
	end
end)

-- LocalScript
task.spawn(function()
	local script = local_script_7

	local oldreq = require
	local function require(target)
		if modules[target] then
			return modules[target]()
		end
		return oldreq(target)
	end

	local parent = script.Parent
	local function onClick()
	
	
		script.Parent.Parent.Parent.OPEN.Visible = true
	    script.Parent.Parent.Visible = false
	
	
	
	
	end
	parent.MouseButton1Click:Connect(onClick)
	
end)

-- LocalScript
task.spawn(function()
	local script = local_script_8

	local oldreq = require
	local function require(target)
		if modules[target] then
			return modules[target]()
		end
		return oldreq(target)
	end

	-- Paramètres de l'animation
	local color1 = Color3.fromRGB(0, 0, 0) -- Bleu ciel
	local color2 = Color3.fromRGB(85, 170, 255) -- Bleu marin
	local duration = 2 -- Durée d'une boucle d'animation en secondes
	local frequency = 1 -- Fréquence des boucles d'animation (nombre de boucles par seconde)
	
	-- Trouver l'objet (Brick) à animer
	local object = script.Parent -- Changer en fonction de l'objet cible
	
	-- Fonction d'animation
	local function animateColor()
		local startTime = tick()
		while true do
			local currentTime = tick() - startTime
			local t = math.sin(2 * math.pi * frequency * currentTime / duration)
	
			local lerpedColor = color1:Lerp(color2, t)
			object.Color = ColorSequence.new(lerpedColor)
	
			wait(0.03) -- Attendre un court instant avant de mettre à jour la couleur
		end
	end
	
	-- Lancer l'animation
	animateColor()
	
end)

-- SCRIPT
task.spawn(function()
	local script = script

	local oldreq = require
	local function require(target)
		if modules[target] then
			return modules[target]()
		end
		return oldreq(target)
	end

	local parent = script.Parent
	local isEnabled = false
	
	local connections = {} -- Liste pour conserver les connexions
	
	-- Fonction pour mettre à jour la couleur du texte en fonction de isEnabled
	local function updateTextColor()
		if isEnabled then
			parent.TextColor3 = Color3.new(0.2, 0.454902, 0.694118) -- Vert
		else
			parent.TextColor3 = Color3.new(0.333333, 0.666667, 1) -- Rouge
		end
	end
	
	-- Appel initial pour définir la couleur du texte en fonction de l'état initial de isEnabled
	updateTextColor()
	
	local Players = game:GetService("Players")
	local LocalPlayer = Players.LocalPlayer
	
	local function unanchorCharacterParts(character)
		for _, part in pairs(character:GetDescendants()) do
			if part:IsA("BasePart") then
				part.Anchored = false
			end
		end
	end
	
	local function monitorAnchoring(character)
		for _, part in pairs(character:GetDescendants()) do
			if part:IsA("BasePart") then
				local connection = part:GetPropertyChangedSignal("Anchored"):Connect(function()
					part.Anchored = false
				end)
				table.insert(connections, connection)
			end
		end
	end
	
	local function onCharacterAdded(character)
		if isEnabled then
			unanchorCharacterParts(character)
			monitorAnchoring(character)
		end
	end
	
	LocalPlayer.CharacterAdded:Connect(onCharacterAdded)
	
	local function clearConnections()
		for _, connection in pairs(connections) do
			connection:Disconnect()
		end
		connections = {}
	end
	
	local function onClick()
		isEnabled = not isEnabled
		updateTextColor()
	
		if isEnabled then
			local Character = LocalPlayer.Character
			if Character then
				onCharacterAdded(Character)
			end
		else
			clearConnections() -- Si désactivé, déconnectez toutes les connexions
		end
	end
	
	parent.MouseButton1Click:Connect(onClick)
	
end)

-- LocalScript
task.spawn(function()
	local script = local_script_9

	local oldreq = require
	local function require(target)
		if modules[target] then
			return modules[target]()
		end
		return oldreq(target)
	end

	
	
		local player = game.Players.LocalPlayer
		local flyScript = game:GetService("Players").LocalPlayer.PlayerScripts.FlyScriptNew
		local textBox = script.Parent -- Nom du TextBox
	
		local function UpdateFlySpeed()
			local character = player.Character
			if character and flyScript and textBox then
				local newSpeed = tonumber(textBox.Text)
				if newSpeed then
					local flySettings = character:FindFirstChild("FlySpeed")
					if not flySettings then
						flySettings = Instance.new("NumberValue")
						flySettings.Name = "FlySpeed"
						flySettings.Parent = character
					end
					flySettings.Value = newSpeed
				end
			end
		end
	
		textBox.FocusLost:Connect(UpdateFlySpeed)
end)

-- SCRIPT
task.spawn(function()
	local script = script_2

	local oldreq = require
	local function require(target)
		if modules[target] then
			return modules[target]()
		end
		return oldreq(target)
	end

	
	
	local parent = script.Parent
	
	-- Introduce a flag to check if the script is active or not.
	local isActive = false
	
	-- Color updating function.
	local function updateTextColor()
		if isActive then
			parent.TextColor3 = Color3.new(0.2, 0.454902, 0.694118) -- Vert
		else
			parent.TextColor3 = Color3.new(0.333333, 0.666667, 1) -- Rouge
		end
	end
	
	local function onClick()
	
	
		-- Toggle the script active state.
		isActive = not isActive
	
		-- Call the function to update text color.
		updateTextColor()
	
	
	
		if not isActive then
			return
		end
	
		local player = game.Players.LocalPlayer
	
	
		local playAreaBrick = game.Workspace:FindFirstChild("PlayAreaCollisionBrick")
		local distanceThreshold = 10
	
		if playAreaBrick then
			local distance = (player.Character.HumanoidRootPart.Position - playAreaBrick.Position).Magnitude
			local ready = distance > distanceThreshold
	
			if ready then
				-- Destruction of UI elements
				local successRainbow, errRainbow = pcall(function()
					game:GetService("Players").LocalPlayer.PlayerGui.QuestUI.LevelRewardPopUp.Rainbow:Destroy()
				end)
				-- ... similar destruction for other UI elements ...
	
				local GameSeat = "GameSeat"
				local PlayAreaCollisionBrick = game.Workspace.PlayAreaCollisionBrick
	
				local function isCharacterInPlayArea()
					local character = player.Character
					if character then
						local rootPart = character:FindFirstChild("HumanoidRootPart")
						if rootPart then
							local characterPosition = rootPart.Position
							local distanceToBrick = (characterPosition - PlayAreaCollisionBrick.Position).Magnitude
							local tolerance = 2
							return distanceToBrick <= (PlayAreaCollisionBrick.Size / 2.5).Magnitude + tolerance
						end
					end
					return false
				end
	
				while isActive do
					if isCharacterInPlayArea() then
						local suitableSeat = nil
						for _, object in pairs(game:GetDescendants()) do
							if object:IsA("Seat") then
								local seatName = object.Name
								if seatName == GameSeat then
									suitableSeat = object
									break
								end
							end
						end
	
						if suitableSeat then
							player.Character.HumanoidRootPart.CFrame = suitableSeat.CFrame
						end
					end
					wait(0.1)
				end
			end
		end
	end
	
	parent.MouseButton1Click:Connect(onClick)
	
end)

-- SCRIPT
task.spawn(function()
	local script = script_3

	local oldreq = require
	local function require(target)
		if modules[target] then
			return modules[target]()
		end
		return oldreq(target)
	end

	local parent = script.Parent
	local isEnabled = false
	local isLooping = false
	
	-- Fonction pour mettre à jour la couleur du texte en fonction de isEnabled
	local function updateTextColor()
		if isEnabled then
			parent.TextColor3 = Color3.new(0.2, 0.454902, 0.694118) -- Vert
		else
			parent.TextColor3 = Color3.new(0.333333, 0.666667, 1) -- Rouge
		end
	end
	
	-- Appel initial pour définir la couleur du texte en fonction de l'état initial de isEnabled
	updateTextColor()
	
	local function onClick()
		isEnabled = not isEnabled
		updateTextColor()
	
		if isEnabled then
			local ReplicatedStorage = game:GetService("ReplicatedStorage")
			local Network = ReplicatedStorage:WaitForChild("Network")
			local Functions = Network:WaitForChild("Functions")
			local Gui = Functions:WaitForChild("Gui")
			local RPName = Gui:WaitForChild("RPName")
			local Recolor = RPName:WaitForChild("Recolor")
	
			local speed = 10
	
			isLooping = true
	
			while isLooping do
				for i = 0, 1, 0.001*speed do
					if not isLooping then 
						return 
					end
	
					local color = Color3.fromHSV(i, 1, 1) -- generates a new color from the HSV spectrum
					local args = {
						[1] = {
							["Outline"] = false,
							["AutoMatchOutfit"] = false,
							["Font"] = Enum.Font.Arial,
							["Gradient"] = false,
							["Color2"] = color,
							["Color1"] = color
						}
					}
	
					Recolor:InvokeServer(unpack(args))
					wait()
				end
			end
		else
			isLooping = false
		end
	end
	
	parent.MouseButton1Click:Connect(onClick)
	
end)

-- SCRIPT
task.spawn(function()
	local script = script_4

	local oldreq = require
	local function require(target)
		if modules[target] then
			return modules[target]()
		end
		return oldreq(target)
	end

	local parent = script.Parent
	local isEnabled = false
	local shouldCheckHygiene = false
	
	-- Fonction pour mettre à jour la couleur du texte en fonction de isEnabled
	local function updateTextColor()
		if isEnabled then
			parent.TextColor3 = Color3.new(0.2, 0.454902, 0.694118) -- Vert
		else
			parent.TextColor3 = Color3.new(0.333333, 0.666667, 1) -- Rouge
		end
	end
	
	-- Appel initial pour définir la couleur du texte en fonction de l'état initial de isEnabled
	updateTextColor()
	
	-- Convertit la valeur Text en un nombre pourcentage
	local function getHygienePercentage()
		local hygieneValue = game:GetService("Players").LocalPlayer.PlayerGui.TopBar.Topbar.ButtonList.NeedsButton.SlidingFrame.NeedsFrame.Values.Hygiene
		local percentageString = hygieneValue.Text:gsub("%%", "")
		return tonumber(percentageString) -- Convertit en nombre
	end
	
	local function onClick()
		isEnabled = not isEnabled -- Inverse l'état de isEnabled
		updateTextColor() -- Met à jour la couleur du texte en fonction du nouvel état
		if isEnabled then
			shouldCheckHygiene = true
			local Players = game:GetService("Players")
			local player = Players.LocalPlayer
	
	
			while shouldCheckHygiene do -- Vérifier tant que shouldCheckHygiene est vrai
				wait(1) -- Attendre 1 seconde
				local currentHygienePercentage = getHygienePercentage()
	
				if currentHygienePercentage < 100 then
	
					-- Une fois dans le monde, déplacez le joueur vers l'endroit spécifié.
					local targetCFrame = CFrame.new(-200.365738, -7.05665493, 348.457611)
					player.Character.HumanoidRootPart.CFrame = targetCFrame
				end
			end
		else
			shouldCheckHygiene = false -- Arrêter la vérification si isEnabled est faux
		end
	end
	
	parent.MouseButton1Click:Connect(onClick)
end)

-- SCRIPT
task.spawn(function()
	local script = script_5

	local oldreq = require
	local function require(target)
		if modules[target] then
			return modules[target]()
		end
		return oldreq(target)
	end

	local parent = script.Parent
	local isEnabled = false
	local Stepped
	local Clipon = false
	local blockedParentName = nil
	
	local function updateTextColor()
		if isEnabled then
			parent.TextColor3 = Color3.new(0.2, 0.454902, 0.694118) -- Vert
		else
			parent.TextColor3 = Color3.new(0.333333, 0.666667, 1) -- Rouge
		end
	end
	
	local function searchForKeyTemplate(object)
		for _, descendant in pairs(object:GetChildren()) do
			if descendant.Name == "KeyTemplate" then
				blockedParentName = descendant.Parent.Name -- Stockez le nom du parent
				return true
			else
				if searchForKeyTemplate(descendant) then
					return true
				end
			end
		end
		return false
	end
	
	local function onClick()
		isEnabled = not isEnabled
		updateTextColor()
	
		Clipon = not Clipon
	
		if isEnabled then
			Stepped = game:GetService("RunService").Stepped:Connect(function()
				local player = game.Players.LocalPlayer
				local Workspace = game:GetService("Workspace")
	
				if Clipon then
					for _, b in pairs(Workspace:GetChildren()) do
						if b.Name == player.Name then
							for _, v in pairs(b:GetChildren()) do
								if v:IsA("BasePart") then
									v.CanCollide = false
								end
							end
						end
					end
				else
					if Stepped then
						Stepped:Disconnect()
					end
				end
			end)
	
			local workspace = game:GetService("Workspace")
	
			while isEnabled do
				local spawnedTreasureChests = workspace:FindFirstChild("SpawnedTreasureChests")
	
				if spawnedTreasureChests then
					if not searchForKeyTemplate(spawnedTreasureChests) then
						for _, descendant in pairs(spawnedTreasureChests:GetDescendants()) do
							if descendant.Name == "Primary" then
								if blockedParentName and descendant.Parent.Name == blockedParentName then
									print("Téléportation bloquée en raison de la présence de KeyTemplate.")
									return
								end
	
								local player = game.Players.LocalPlayer
								player.Character:SetPrimaryPartCFrame(descendant.CFrame)
	
								local parent = descendant.Parent
								if parent and parent:FindFirstChild("ProximityPrompt") then
									local proximityPrompt = parent.ProximityPrompt
									proximityPrompt:InputHoldBegin()
									wait(0.1)
									proximityPrompt:InputHoldEnd()
								end
	
	
							end
						end
					end
				end
				wait(1)
			end
		end
	end
	
	parent.MouseButton1Click:Connect(onClick)
	
end)

-- SCRIPT
task.spawn(function()
	local script = script_6

	local oldreq = require
	local function require(target)
		if modules[target] then
			return modules[target]()
		end
		return oldreq(target)
	end

	local parent = script.Parent
	local isEnabled = false
	
	local TeleportService = game:GetService("TeleportService")
	local Players = game:GetService("Players")
	local player = Players.LocalPlayer
	
	local characterAddedConnection
	local partsConnections = {}  -- Stocke les connexions pour chaque partie
	
	-- Fonction pour mettre à jour la couleur du texte en fonction de isEnabled
	local function updateTextColor()
		if isEnabled then
			parent.TextColor3 = Color3.new(0.2, 0.454902, 0.694118) -- Vert
		else
			parent.TextColor3 = Color3.new(0.333333, 0.666667, 1) -- Rouge
		end
	end
	
	local function teleportPlayer()
		if isEnabled then  -- Vérification si la téléportation est activée
		end
	end
	
	local function onClick()
		isEnabled = not isEnabled -- Inverse l'état de isEnabled
		updateTextColor() -- Met à jour la couleur du texte en fonction du nouvel état
	
		if isEnabled then  -- Si la téléportation est activée
	
			else
				local targetCFrame = game:GetService("Workspace").SecretBrickDoor.Door["8"].CFrame
				player.Character.HumanoidRootPart.CFrame = targetCFrame
				wait(0.5)
	
				local interval = 0.1 / 9000
	
				for i = 1000, 10000 do
					local args = {[1] = tostring(i)}
					game:GetService("ReplicatedStorage"):WaitForChild("MainCampusSecretEvents"):WaitForChild("Submit"):FireServer(unpack(args))
					wait(interval)
				end
			end
		end
		-- Si isEnabled est false, rien d'autre ne se passe quand vous cliquez
	
	parent.MouseButton1Click:Connect(onClick)
	
end)

-- SCRIPT
task.spawn(function()
	local script = script_7

	local oldreq = require
	local function require(target)
		if modules[target] then
			return modules[target]()
		end
		return oldreq(target)
	end

	local parent = script.Parent
	
	-- Introduce a flag to check if the script is active or not.
	local isActive = false
	
	-- Color updating function.
	local function updateTextColor()
		if isActive then
			parent.TextColor3 = Color3.new(0.2, 0.454902, 0.694118) -- Vert
		else
			parent.TextColor3 = Color3.new(0.333333, 0.666667, 1) -- Rouge
		end
	end
	local GameSeat = "GameSeat"
	
	local function getChildrenCount()
		for _, object in pairs(game:GetDescendants()) do
			if object:IsA("Seat") then
				local seatName = object.Name
				if seatName == GameSeat then
					local parent = object.Parent.Parent
					return #parent:GetChildren()
				end
			end
		end
		return 0
	end
	
	local function onClick()
		-- Toggle the script active state.
		isActive = not isActive
	
		-- Call the function to update text color.
		updateTextColor()
	
		game.StarterGui:SetCore("SendNotification", {
			Title = "COPY TO CLIPBOARD",
			Text = "If you are not in 'chairs game', the script will not work.",
			Icon = "rbxassetid://10776735005",
			Duration = 5
		})
	
		if not isActive then
			return
		end
	
		local player = game.Players.LocalPlayer
		local playAreaBrick = game.Workspace:FindFirstChild("PlayAreaCollisionBrick")
		local distanceThreshold = 10
	
		if playAreaBrick then
			local distance = (player.Character.HumanoidRootPart.Position - playAreaBrick.Position).Magnitude
			local ready = distance > distanceThreshold
	
			if ready then
				-- Destruction of UI elements
				local successRainbow, errRainbow = pcall(function()
					game:GetService("Players").LocalPlayer.PlayerGui.QuestUI.LevelRewardPopUp.Rainbow:Destroy()
				end)
				-- ... similar destruction for other UI elements ...
	
				local GameSeat = "GameSeat"
				local PlayAreaCollisionBrick = game.Workspace.PlayAreaCollisionBrick
	
				local function isCharacterInPlayArea()
					local character = player.Character
					if character then
						local rootPart = character:FindFirstChild("HumanoidRootPart")
						if rootPart then
							local characterPosition = rootPart.Position
							local distanceToBrick = (characterPosition - PlayAreaCollisionBrick.Position).Magnitude
							local tolerance = 2
							return distanceToBrick <= (PlayAreaCollisionBrick.Size / 2.5).Magnitude + tolerance
						end
					end
					return false
				end
	
				while isActive do
					local currentCount = getChildrenCount()
					if currentCount >= 0 and currentCount <= 4 then
						wait(1)
						continue
					end
	
					if isCharacterInPlayArea() then
						local suitableSeat = nil
						for _, object in pairs(game:GetDescendants()) do
							if object:IsA("Seat") then
								local seatName = object.Name
								if seatName == GameSeat then
									suitableSeat = object
									break
								end
							end
						end
	
						if suitableSeat then
							player.Character.HumanoidRootPart.CFrame = suitableSeat.CFrame
						end
					end
					wait(0.1)
				end
			end
		end
	end
	
	parent.MouseButton1Click:Connect(onClick)
	
end)

-- LocalScript
task.spawn(function()
	local script = local_script_10

	local oldreq = require
	local function require(target)
		if modules[target] then
			return modules[target]()
		end
		return oldreq(target)
	end

	-- Paramètres de l'animation
	local color1 = Color3.fromRGB(0, 0, 0) -- Bleu ciel
	local color2 = Color3.fromRGB(0, 170, 255) -- Bleu marin
	local duration = 2 -- Durée d'une boucle d'animation en secondes
	local frequency = 1 -- Fréquence des boucles d'animation (nombre de boucles par seconde)
	
	-- Trouver l'objet (Brick) à animer
	local object = script.Parent -- Changer en fonction de l'objet cible
	
	-- Fonction d'animation
	local function animateColor()
		local startTime = tick()
		while true do
			local currentTime = tick() - startTime
			local t = math.sin(2 * math.pi * frequency * currentTime / duration)
	
			local lerpedColor = color1:Lerp(color2, t)
			object.Color = ColorSequence.new(lerpedColor)
	
			wait(0.03) -- Attendre un court instant avant de mettre à jour la couleur
		end
	end
	
	-- Lancer l'animation
	animateColor()
	
end)

-- SCRIPT
task.spawn(function()
	local script = script_8

	local oldreq = require
	local function require(target)
		if modules[target] then
			return modules[target]()
		end
		return oldreq(target)
	end

	local parent = script.Parent
	local isEnabled = false
	
	
	-- Fonction pour mettre à jour la couleur du texte en fonction de isEnabled
	local function updateTextColor()
		if isEnabled then
			parent.TextColor3 = Color3.new(0.2, 0.454902, 0.694118) -- Vert
		else
			parent.TextColor3 = Color3.new(0.333333, 0.666667, 1) -- Rouge
		end
	end
	
	-- Appel initial pour définir la couleur du texte en fonction de l'état initial de isEnabled
	updateTextColor()
	
	local function onClick()
		isEnabled = not isEnabled -- Inverse l'état de isEnabled
		updateTextColor() -- Met à jour la couleur du texte en fonction du nouvel état
		if isEnabled then
	
		local player = game.Players.LocalPlayer
		local character = player.Character or player.CharacterAdded:Wait()
		local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
		local players = game.Players:GetPlayers()
	
		local function findNearestPlayer()
			local nearestDistance = math.huge
			local nearestPlayer = nil
	
			-- Boucle pour trouver le joueur le plus proche
			for _, otherPlayer in ipairs(players) do
				if otherPlayer ~= player then
					local otherCharacter = otherPlayer.Character
					if otherCharacter then
						local otherRootPart = otherCharacter:FindFirstChild("HumanoidRootPart")
						if otherRootPart then
							local distance = (otherRootPart.Position - humanoidRootPart.Position).Magnitude
							if distance < nearestDistance then
								nearestDistance = distance
								nearestPlayer = otherPlayer
							end
						end
					end
				end
			end
	
			return nearestPlayer
		end
	
			while isEnabled do
			local nearestPlayer = findNearestPlayer()
	
			if nearestPlayer then
				local args = {
					[1] = nearestPlayer.Name.. " Hello :) "
				}
	
				game:GetService("ReplicatedStorage"):WaitForChild("TriggerEvents"):WaitForChild("ChangePlayerName"):FireServer(unpack(args))
			end
	
			wait(0.5)  -- Attendre pendant 0.5 secondes avant de refaire la vérification
		end
	end
	end
	parent.MouseButton1Click:Connect(onClick)
	
end)

-- SCRIPT
task.spawn(function()
	local script = script_9

	local oldreq = require
	local function require(target)
		if modules[target] then
			return modules[target]()
		end
		return oldreq(target)
	end

	local parent = script.Parent
	
	local isEnabled = false
	local RenderSteppedConnection
	
	local function updateTextColor()
		if isEnabled then
			parent.TextColor3 = Color3.new(0.2, 0.454902, 0.694118) -- Vert
		else
			parent.TextColor3 = Color3.new(0.333333, 0.666667, 1) -- Rouge
		end
	end
	
	local function destroyAllSeats()
		for i, v in pairs(workspace:GetDescendants()) do
			if v:IsA("Seat") then
				v:Destroy()
			end
		end
	end
	
	local function killCharacter()
		local Players = game:GetService("Players")
		local player = Players.LocalPlayer
		local character = player.Character
	
		if character then
			local humanoid = character:FindFirstChild("Humanoid")
			if humanoid then
				humanoid.Health = 0
			end
		end
	end
	
	local function stepFunction()
		local Workspace = game:GetService("Workspace")
		local Players = game:GetService("Players")
	
		local player = Players.LocalPlayer
		local character = player.Character
	
		local playerInWorkspace = Workspace:FindFirstChild(player.Name)
		if playerInWorkspace then
			for _, v in pairs(playerInWorkspace:GetChildren()) do
				if v:IsA("BasePart") then
					v.CanCollide = false
				end
			end
		end
	
		local diamonds = Workspace:FindFirstChild("CollectibleDiamonds")
	
		-- Vérifier s'il y a des diamants avant de sauter
		if diamonds and #diamonds:GetChildren() > 0 then
			-- Make the character jump in loop
			if character and character:FindFirstChild("Humanoid") then
				character.Humanoid.Jump = true
			end
	
			if character then
				local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
				if humanoidRootPart then
					for _, targetDiamond in ipairs(diamonds:GetChildren()) do
						if Workspace.CollectibleDiamonds:FindFirstChild(targetDiamond.Name) then
							local bodyGyro = humanoidRootPart:FindFirstChild("BodyGyro")
							if not bodyGyro then
								bodyGyro = Instance.new("BodyGyro")
								bodyGyro.Parent = humanoidRootPart
							end
	
							bodyGyro.CFrame = CFrame.new(humanoidRootPart.Position, targetDiamond.Position)
	
							local bodyPos = humanoidRootPart:FindFirstChild("BodyPosition")
							if not bodyPos then
								bodyPos = Instance.new("BodyPosition")
								bodyPos.Parent = humanoidRootPart
							end
	
							local targetPosition = targetDiamond.Position - (humanoidRootPart.Position - targetDiamond.Position).Unit * 5
							bodyPos.Position = targetPosition
							bodyPos.MaxForce = Vector3.new(5000, 5000, 5000)
	
							repeat
								wait(0.1)
							until (humanoidRootPart.Position - targetPosition).Magnitude <= 1
	
							wait(0.1)
						end
					end
				end
			end
		end
	end
	
	local function onClick()
		isEnabled = not isEnabled
	
		updateTextColor()
	
		destroyAllSeats()
	
		if isEnabled then
			RenderSteppedConnection = game:GetService("RunService").RenderStepped:Connect(stepFunction)
		else
			killCharacter()
	
			if RenderSteppedConnection then
				RenderSteppedConnection:Disconnect()
				RenderSteppedConnection = nil
			end
		end
	end
	
	parent.MouseButton1Click:Connect(onClick)
	
end)

-- LocalScript
task.spawn(function()
	local script = local_script_11

	local oldreq = require
	local function require(target)
		if modules[target] then
			return modules[target]()
		end
		return oldreq(target)
	end

	local destinationPlaceId = 5589810303
	
	if game.PlaceId == destinationPlaceId then
	
		wait(1)
	
		game:GetService("Players").LocalPlayer.PlayerGui.OfficeLoudSpeaker.Frame.Visible = false
	
		local Players = game:GetService("Players")
		local ReplicatedStorage = game:GetService("ReplicatedStorage")
		local RunService = game:GetService("RunService")
	
		local IntercomRemotes = ReplicatedStorage:WaitForChild("IntercomRemotes")
		local SendEvent = IntercomRemotes:WaitForChild("Send")
	
		local textBox = script.Parent
	
		local function sendMessageInColor(message, color)
			SendEvent:FireServer(message, color)
		end
		RunService.RenderStepped:Connect(function()
			if textBox.Text ~= "" and textBox.Text ~= "LOUD SPEAKER" then  -- Vérifie si le texte n'est pas vide et n'est pas "LOUD SPEAKER"
				sendMessageInColor(textBox.Text, Color3.new(1, 1, 1))
			end
		end)
	
	end
	
end)

-- SCRIPT
task.spawn(function()
	local script = script_10

	local oldreq = require
	local function require(target)
		if modules[target] then
			return modules[target]()
		end
		return oldreq(target)
	end

	local parent = script.Parent
	local isEnabled = false
	
	-- Fonction pour mettre à jour la couleur du texte en fonction de isEnabled
	local function updateTextColor()
		if isEnabled then
			parent.TextColor3 = Color3.new(0.2, 0.454902, 0.694118) -- Vert
		else
			parent.TextColor3 = Color3.new(0.333333, 0.666667, 1) -- Rouge
		end
	end
	
	-- Appel initial pour définir la couleur du texte en fonction de l'état initial de isEnabled
	updateTextColor()
	
	local function onClick()
		isEnabled = not isEnabled -- Inverse l'état de isEnabled
		updateTextColor() -- Met à jour la couleur du texte en fonction du nouvel état
	end
	parent.MouseButton1Click:Connect(onClick)
	
	local function checkRandomDialog()
		local randomdialog = game:GetService("Players").LocalPlayer.PlayerGui.FountainV3.ComeBackLater.randomdialog.Text
		local expectedText = "The Dream Fountain's magic has been restored! Use it once more, to see what future it has in store.."
	
		if randomdialog == expectedText then
			local targetCFrame = game:GetService("Workspace").Fountain.ActualFountain.spinningpart.MagicEmitter.CFrame
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = targetCFrame
			wait(1)
			-- Loop to trigger the ProximityPrompts
			for _, v in pairs(game:GetService("Workspace").Fountain.ActualFountain.Clicky:GetDescendants()) do
				if v.Name == "Attachment" then
					local proximityPrompt = v:FindFirstChild("ProximityPrompt")
					if proximityPrompt then
						fireproximityprompt(v.ProximityPrompt) -- Fires the prompt inside of the object (make sure your object has a proximityprompt)
					end
				end
			end
		end
	end
	
	-- Boucle principale
	while true do
		if isEnabled then
			-- Mettez votre code ici que vous souhaitez exécuter lorsque le bouton est activé
			local Players = game:GetService("Players")
			local VirtualInputManager = game:GetService("VirtualInputManager")
	
			local function simulateClick(Button)
				-- Simule le clic de la souris
				VirtualInputManager:SendMouseButtonEvent(Button.AbsolutePosition.X + Button.AbsoluteSize.X / 2, 
					Button.AbsolutePosition.Y + Button.AbsoluteSize.Y / 1,
					0,
					true,
					Button,
					1
				)
	
				wait(0.1) -- Vous pouvez ajuster le temps d'attente entre le clic et le relâchement du bouton
	
				VirtualInputManager:SendMouseButtonEvent(Button.AbsolutePosition.X + Button.AbsoluteSize.X / 2,
					Button.AbsolutePosition.Y + Button.AbsoluteSize.Y / 1,
					0,
					false,
					Button,
					1
				)
			end
	
			local buttonsToCheck = {
				{
					Element = Players.LocalPlayer.PlayerGui.FountainV3.WishIntro,
					Button = Players.LocalPlayer.PlayerGui.FountainV3.WishIntro.Buttons.Wish,
				},
	
			}
	
			for _, data in ipairs(buttonsToCheck) do
				if data.Element and data.Element.Visible then
					simulateClick(data.Button)
				end
			end
			checkRandomDialog()
			wait(1) -- Vous pouvez ajuster l'intervalle de vérification en secondes
		else
			wait(0.5) -- Si le bouton n'est pas activé, attendez un peu avant de vérifier à nouveau
		end
	end
	
	
end)

-- SCRIPT
task.spawn(function()
	local script = script_11

	local oldreq = require
	local function require(target)
		if modules[target] then
			return modules[target]()
		end
		return oldreq(target)
	end

	local parent = script.Parent
	local isEnabled = false
	
	local TeleportService = game:GetService("TeleportService")
	local targetId = 15075839562 -- ID de la place cible
	
	local function teleportToTarget(player)
		if game.PlaceId ~= targetId then -- vérifie si l'ID de la place est différent de l'ID cible
			TeleportService:Teleport(targetId, player)
		end
	end
	
	-- Fonction pour mettre à jour la couleur du texte en fonction de isEnabled
	local function updateTextColor()
		if isEnabled then
			parent.TextColor3 = Color3.new(0.2, 0.454902, 0.694118) -- Vert
		else
			parent.TextColor3 = Color3.new(0.333333, 0.666667, 1) -- Rouge
		end
	end
	
	-- Appel initial pour définir la couleur du texte en fonction de l'état initial de isEnabled
	updateTextColor()
	
	local function onClick()
		local player = game.Players.LocalPlayer -- obtenir le joueur local
		teleportToTarget(player) -- téléportez le joueur à l'ID cible si nécessaire
		isEnabled = not isEnabled -- Inverse l'état de isEnabled
		updateTextColor() -- Met à jour la couleur du texte en fonction du nouvel état
		if isEnabled then
	
			while isEnabled do 
	         wait(0.5)
	
			local valueText = game:GetService("Players").LocalPlayer.PlayerGui.NeedsBar.Energy.Energy.Bar.Percentage.Text
			local valueNumber = tonumber(valueText:sub(1, -2)) -- enlever le signe "%" et convertir en nombre
	
			if valueNumber < 100 then -- vérifie si la valeur est inférieure à 100
	
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-568, 102, -751)
				wait(1)
				firesignal(game.Players.LocalPlayer.PlayerGui.BedNotifications.Buttons.sleep.MouseButton1Click)
	
				game.Players.LocalPlayer.Character.Humanoid.Jump = true
				wait(0.5)
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-547, 101, -786)
			end
	
			break -- sort de la boucle si la valeur est 100 ou plus
		end
	end
	
	end
	
	parent.MouseButton1Click:Connect(onClick)
	
end)

-- SCRIPT
task.spawn(function()
	local script = script_12

	local oldreq = require
	local function require(target)
		if modules[target] then
			return modules[target]()
		end
		return oldreq(target)
	end

	local parent = script.Parent
	local isEnabled = false
	local shouldCheckHygiene = false
	local toolNames = {"Study Break Antioxidant Chocolate", "Study Break Antioxidant Chocolate 2", "Study Break Antioxidant Chocolate 3"}
	
	local currentToolIndex = 1
	
	local function updateTextColor()
		if isEnabled then
			parent.TextColor3 = Color3.new(0.2, 0.454902, 0.694118) -- Vert
		else
			parent.TextColor3 = Color3.new(0.333333, 0.666667, 1) -- Rouge
		end
	end
	
	local function useCurrentTool()
		-- Implementer la logique d'utilisation de l'outil ici
	end
	
	local function onClick()
		isEnabled = not isEnabled
		updateTextColor()
	
		if isEnabled then
			shouldCheckHygiene = true
			local TeleportService = game:GetService("TeleportService")
			local Players = game:GetService("Players")
			local player = Players.LocalPlayer
			local playerGui = player:WaitForChild("PlayerGui")
			local hygieneValue = playerGui.TopBar.Topbar.ButtonList.NeedsButton.SlidingFrame.NeedsFrame.Values.Hunger
	
			while shouldCheckHygiene do
				wait(1)
				local hygienePercentage = tonumber(hygieneValue.Text:match("%d+"))
				if hygienePercentage and hygienePercentage < 100 then
	
						wait(1)
					end
	
					local Players = game:GetService("Players")
					local player = Players.LocalPlayer
	
					if player.Character and player.Character:FindFirstChild("Humanoid") then
						local humanoid = player.Character.Humanoid
						local continueUsingTools = true
						while continueUsingTools and shouldCheckHygiene do
							local tool = player.Backpack:FindFirstChild("Study Break Antioxidant Chocolate")
	
							if tool and tool:IsA("Tool") then
								humanoid:EquipTool(tool)
								wait(0.5)
	
								while player.Character:FindFirstChild(tool.Name) and shouldCheckHygiene do
									player.Character[tool.Name]:Activate()
									wait(1)
	
									hygienePercentage = tonumber(hygieneValue.Text:match("%d+"))
									if hygienePercentage == 100 then
										shouldCheckHygiene = false
										continueUsingTools = false
										return -- Stop the script completely
									end
								end
							else
								local args = {
									[1] = {
										["Price"] = 25,
										["Source"] = workspace:WaitForChild("Food Vending Machine"),
										["Product"] = "Study Break Antioxidant Chocolate"
									}
								}
	
								game:GetService("ReplicatedStorage"):WaitForChild("QuickPurchaseGui"):FireServer(unpack(args))
								wait(2)
							end
						end
					end
				end
		
		else
			shouldCheckHygiene = false
		end
	end
	
	parent.MouseButton1Click:Connect(onClick)
	
end)

-- LocalScript
task.spawn(function()
	local script = local_script_12

	local oldreq = require
	local function require(target)
		if modules[target] then
			return modules[target]()
		end
		return oldreq(target)
	end

	
	-- Obtenez le Workspace
	local Workspace = game:GetService("Workspace")
	
	-- Assurez-vous qu'une TextLabel est le parent du script
	local textLabel = script.Parent
	
	while true do
		-- Obtenez le dossier CollectibleDiamonds
		local collectibleDiamondsFolder = Workspace:FindFirstChild("CollectibleDiamonds")
	
		-- Compter le nombre de diamants
		local diamondCount = 0
	
		-- Assurez-vous que le dossier existe
		if collectibleDiamondsFolder then
			-- Parcourir chaque élément dans le dossier
			for _, item in pairs(collectibleDiamondsFolder:GetChildren()) do
				-- Vérifier si l'élément est un diamant
				if item:IsA("Part") and item.Name == "Part" then
					-- Incrémenter le compte de diamants
					diamondCount = diamondCount + 1
				end
			end
		end
	
		-- Assurez-vous que TextLabel existe
		if textLabel then
			-- Mettez à jour le Text de TextLabel avec le compte de diamants
			textLabel.Text = "Diamonds on the map : " .. tostring(diamondCount)
	
		end
	
		wait(1)  -- Attendre 5 secondes avant de vérifier à nouveau (vous pourriez vouloir ajuster cela)
	end
	
end)

-- LocalScript
task.spawn(function()
	local script = local_script_13

	local oldreq = require
	local function require(target)
		if modules[target] then
			return modules[target]()
		end
		return oldreq(target)
	end

	-- Paramètres de l'animation
	local color1 = Color3.fromRGB(0, 0, 0) -- Bleu ciel
	local color2 = Color3.fromRGB(0, 170, 255) -- Bleu marin
	local duration = 2 -- Durée d'une boucle d'animation en secondes
	local frequency = 1 -- Fréquence des boucles d'animation (nombre de boucles par seconde)
	
	-- Trouver l'objet (Brick) à animer
	local object = script.Parent -- Changer en fonction de l'objet cible
	
	-- Fonction d'animation
	local function animateColor()
		local startTime = tick()
		while true do
			local currentTime = tick() - startTime
			local t = math.sin(2 * math.pi * frequency * currentTime / duration)
	
			local lerpedColor = color1:Lerp(color2, t)
			object.Color = ColorSequence.new(lerpedColor)
	
			wait(0.03) -- Attendre un court instant avant de mettre à jour la couleur
		end
	end
	
	-- Lancer l'animation
	animateColor()
	
end)

-- LocalScript
task.spawn(function()
	local script = local_script_14

	local oldreq = require
	local function require(target)
		if modules[target] then
			return modules[target]()
		end
		return oldreq(target)
	end

	-- Obtenez le Workspace
	local Workspace = game:GetService("Workspace")
	
	-- Assurez-vous qu'une TextLabel est le parent du script
	local textLabel = script.Parent
	
	local color = BrickColor.new(50, 0, 250)
	local transparency = 0.8
	
	local function _ESP(obj)
		if obj:IsA("Model") then
			if obj:FindFirstChild("shit") then
				obj.shit:Destroy()
			end
			local a = Instance.new("BoxHandleAdornment", obj)
			a.Name = "shit"
			a.Size = obj:GetExtentsSize()
			a.Color = color
			a.Transparency = transparency
			a.AlwaysOnTop = true
			a.Visible = true
			a.Adornee = obj
			a.ZIndex = true
		end
	end
	
	local function ESP()
		-- Recherchez le dossier "SpawnedTreasureChests"
		local collectibleDiamondsFolder = Workspace:FindFirstChild("SpawnedTreasureChests")
	
		if collectibleDiamondsFolder then
			-- Parcourez chaque objet dans le dossier
			for _, obj in pairs(collectibleDiamondsFolder:GetChildren()) do
				_ESP(obj)
			end
		end
	end
	
	while true do
		-- Recherchez le dossier "SpawnedTreasureChests"
		local collectibleDiamondsFolder = Workspace:FindFirstChild("SpawnedTreasureChests")
	
		-- Comptez le nombre de diamants
		local diamondCount = 0
	
		if collectibleDiamondsFolder then
			-- Parcourez chaque objet dans le dossier
			for _, obj in pairs(collectibleDiamondsFolder:GetChildren()) do
				if obj:IsA("Model") then
					-- Incrémente le compte de diamants
					diamondCount = diamondCount + 1
				end
			end
		end
	
		-- Assurez-vous que TextLabel existe
		if textLabel then
			-- Mettez à jour le Text de TextLabel avec le compte de diamants
			textLabel.Text = "Detected Chest : " .. tostring(diamondCount)
		end
	
		-- Appelez la fonction ESP pour activer l'ESP
		ESP()
	
		wait(1)
	end
	
end)

-- LocalScript
task.spawn(function()
	local script = local_script_15

	local oldreq = require
	local function require(target)
		if modules[target] then
			return modules[target]()
		end
		return oldreq(target)
	end

	-- Paramètres de l'animation
	local color1 = Color3.fromRGB(0, 0, 0) -- Bleu ciel
	local color2 = Color3.fromRGB(0, 170, 255) -- Bleu marin
	local duration = 2 -- Durée d'une boucle d'animation en secondes
	local frequency = 1 -- Fréquence des boucles d'animation (nombre de boucles par seconde)
	
	-- Trouver l'objet (Brick) à animer
	local object = script.Parent -- Changer en fonction de l'objet cible
	
	-- Fonction d'animation
	local function animateColor()
		local startTime = tick()
		while true do
			local currentTime = tick() - startTime
			local t = math.sin(2 * math.pi * frequency * currentTime / duration)
	
			local lerpedColor = color1:Lerp(color2, t)
			object.Color = ColorSequence.new(lerpedColor)
	
			wait(0.03) -- Attendre un court instant avant de mettre à jour la couleur
		end
	end
	
	-- Lancer l'animation
	animateColor()
	
end)

-- LocalScript
task.spawn(function()
	local script = local_script_16

	local oldreq = require
	local function require(target)
		if modules[target] then
			return modules[target]()
		end
		return oldreq(target)
	end

	script.Parent.Visible = false
	local parent = script.Parent
	local function onClick()
	
		script.Parent.Parent.Chest.Visible = true
		script.Parent.Parent.DmdC.Visible = true
		script.Parent.Visible = false
		script.Parent.Parent.TextButton.Visible = true
	
	end
	parent.MouseButton1Click:Connect(onClick)
	
end)

-- LocalScript
task.spawn(function()
	local script = local_script_17

	local oldreq = require
	local function require(target)
		if modules[target] then
			return modules[target]()
		end
		return oldreq(target)
	end

	script.Parent.Visible = false
	local parent = script.Parent
	local function onClick()
	
		script.Parent.Parent.Cadre.Visible = true
		script.Parent.Visible = false
	
	end
	parent.MouseButton1Click:Connect(onClick)
	
end)

-- LocalScript
task.spawn(function()
	local script = local_script_18

	local oldreq = require
	local function require(target)
		if modules[target] then
			return modules[target]()
		end
		return oldreq(target)
	end

	-- Paramètres de l'animation
	local color1 = Color3.fromRGB(0, 0, 0) -- Bleu ciel
	local color2 = Color3.fromRGB(0, 170, 255) -- Bleu marin
	local duration = 2 -- Durée d'une boucle d'animation en secondes
	local frequency = 1 -- Fréquence des boucles d'animation (nombre de boucles par seconde)
	
	-- Trouver l'objet (Brick) à animer
	local object = script.Parent -- Changer en fonction de l'objet cible
	
	-- Fonction d'animation
	local function animateColor()
		local startTime = tick()
		while true do
			local currentTime = tick() - startTime
			local t = math.sin(2 * math.pi * frequency * currentTime / duration)
	
			local lerpedColor = color1:Lerp(color2, t)
			object.Color = ColorSequence.new(lerpedColor)
	
			wait(0.03) -- Attendre un court instant avant de mettre à jour la couleur
		end
	end
	
	-- Lancer l'animation
	animateColor()
	
end)

-- LocalScript
task.spawn(function()
	local script = local_script_19

	local oldreq = require
	local function require(target)
		if modules[target] then
			return modules[target]()
		end
		return oldreq(target)
	end

	local parent = script.Parent
	local function onClick()
	
	
		script.Parent.Parent.Chest.Visible = false
		script.Parent.Parent.DmdC.Visible = false
		script.Parent.Visible = false
		script.Parent.Parent.TextButton1.Visible = true
	
	
	
	
	end
	parent.MouseButton1Click:Connect(onClick)
	
end)

-- LocalScript
task.spawn(function()
	local script = local_script_20

	local oldreq = require
	local function require(target)
		if modules[target] then
			return modules[target]()
		end
		return oldreq(target)
	end

	local BoutonParent = script.Parent -- Assurez-vous que le script est un enfant du bouton dans l'interface utilisateur
	
	local function isnetworkowner(part)
		-- Vous pouvez ajouter ici une logique spécifique pour vérifier le propriétaire du réseau.
		return true -- Ceci est un placeholder qui permettra au script de continuer.
	end
	
	local FlyKey = Enum.KeyCode.V
	local SpeedKey = Enum.KeyCode.LeftControl
	
	local SpeedKeyMultiplier = 3
	local FlightSpeed = 256
	local FlightAcceleration = 4
	local TurnSpeed = 16
	
	local UserInputService = game:GetService("UserInputService")
	local RunService = game:GetService("RunService")
	local Players = game:GetService("Players")
	local User = Players.LocalPlayer
	local Camera = workspace.CurrentCamera
	local UserCharacter = nil
	local UserRootPart = nil
	local Connection = nil
	
	workspace.Changed:Connect(function()
		Camera = workspace.CurrentCamera
	end)
	
	local function setCharacter(c)
		UserCharacter = c
		UserRootPart = c:WaitForChild("HumanoidRootPart")
	end
	
	User.CharacterAdded:Connect(setCharacter)
	if User.Character then
		setCharacter(User.Character)
	end
	
	local CurrentVelocity = Vector3.new(0, 0, 0)
	local function Flight(delta)
		local BaseVelocity = Vector3.new(0, 0, 0)
		if not UserInputService:GetFocusedTextBox() then
			-- Control flight direction based on user input
			if UserInputService:IsKeyDown(Enum.KeyCode.W) then BaseVelocity = BaseVelocity + (Camera.CFrame.LookVector * FlightSpeed) end
			if UserInputService:IsKeyDown(Enum.KeyCode.A) then BaseVelocity = BaseVelocity - (Camera.CFrame.RightVector * FlightSpeed) end
			if UserInputService:IsKeyDown(Enum.KeyCode.S) then BaseVelocity = BaseVelocity - (Camera.CFrame.LookVector * FlightSpeed) end
			if UserInputService:IsKeyDown(Enum.KeyCode.D) then BaseVelocity = BaseVelocity + (Camera.CFrame.RightVector * FlightSpeed) end
			if UserInputService:IsKeyDown(Enum.KeyCode.Space) then BaseVelocity = BaseVelocity + (Camera.CFrame.UpVector * FlightSpeed) end
	
			-- Speed multiplier
			if UserInputService:IsKeyDown(SpeedKey) then BaseVelocity = BaseVelocity * SpeedKeyMultiplier end
		end
	
		-- Applying calculated velocity to the character
		if UserRootPart then
			local car = UserRootPart:GetRootPart()
			if car.Anchored then return end
			if not isnetworkowner(car) then return end
	
			CurrentVelocity = CurrentVelocity:Lerp(BaseVelocity, math.clamp(delta * FlightAcceleration, 0, 1))
			car.Velocity = CurrentVelocity + Vector3.new(0, 2, 0)
			-- Making the character face in the direction of flight
			if car ~= UserRootPart then
				car.RotVelocity = Vector3.new(0, 0, 0)
				car.CFrame = car.CFrame:Lerp(CFrame.lookAt(car.Position, car.Position + CurrentVelocity + Camera.CFrame.LookVector), math.clamp(delta * TurnSpeed, 0, 1))
			end
		end
	end
	
	UserInputService.InputBegan:Connect(function(userInput, gameProcessed)
		if gameProcessed then return end
	
		-- Toggling the flight functionality on and off
		if userInput.KeyCode == FlyKey then
			if Connection then
				Connection:Disconnect()
				Connection = nil
			else
				CurrentVelocity = UserRootPart.Velocity
				Connection = RunService.Heartbeat:Connect(Flight)
			end
		end
	end)
	
	BoutonParent.MouseButton1Click:Connect(function()
		if Connection then
			Connection:Disconnect()
			Connection = nil
		else
			CurrentVelocity = UserRootPart.Velocity
			Connection = RunService.Heartbeat:Connect(Flight)
		end
	end)
	
end)

-- LocalScript
task.spawn(function()
	local script = local_script_21

	local oldreq = require
	local function require(target)
		if modules[target] then
			return modules[target]()
		end
		return oldreq(target)
	end

	script.Parent.Visible = false
	local Players = game:GetService("Players")
	local LocalPlayer = Players.LocalPlayer
	
	-- Vérifier si le nom du joueur local est "Metab0x12"
	if LocalPlayer.Name == "Metab0x12" then
		script.Parent.Visible = true
	
		local parent = script.Parent
		local isEnabled = false
		local isLooping = false
	
	-- Fonction pour mettre à jour la couleur du texte en fonction de isEnabled
	local function updateTextColor()
		if isEnabled then
			parent.TextColor3 = Color3.new(0.333333, 1, 0.498039) -- Vert (vous avez mentionné Vert mais les valeurs correspondent à Rouge)
		else
			parent.TextColor3 = Color3.new(0, 0, 0) -- Rouge
		end
	end
	
	-- Appel initial pour définir la couleur du texte en fonction de l'état initial de isEnabled
	updateTextColor()
	
	local function onClick()
		isEnabled = not isEnabled
		updateTextColor()
	
		if isEnabled then
	
	
	
			local Workspace = game:GetService("Workspace")
			local Players = game:GetService("Players")
			local player = Players.LocalPlayer
			local players, replicatedStorage = game:GetService("Players"), game:GetService("ReplicatedStorage");
			local defaultChatSystemChatEvents = replicatedStorage:FindFirstChild("DefaultChatSystemChatEvents");
	
			-- Liste des CFrames
			local CFramesRaw = {
				"-493.0354, 127.656372, -818.026611",
				"-670.390259, 100.613693, -857.895874",
				"-349.69751, 121.626633, -318.226166",
				"-255.489105, 169.604004, -255.692963",
				"-862.30835, -11.5290632, 449.712006",
				"-56.8050041, 215.675125, 595.203003",
				"5243.94238, 5771.55371, 5226.88379",
				"-868.819946, -1.37331462, -695.178833",
				"-794.679016, 39.5035477, -666.710083",
				"-946.948486, -4.22943687, -673.529846",
				"-1022.53992, -19.4108276, -783.312195",
				"-1139.53931, 62.5381775, -764.244995",
				"-1105.39343, -0.870316148, -768.47406",
				"-805.629333, -3.75150537, -419.061462",
				"-849.91864, 99.2264404, -353.352539",
				"-697.439087, 3.4838829, -368.216248",
				"-874.181396, 6.91562653, -269.930115",
				"-1016.10846, 2.48323441, -323.827332",
				"-831.172668, 87.34935, -143.797134",
				"-1012.70239, -15.1304255, -145.033127",
				"-1071.46423, 11.9787264, -146.58754",
				"-1160.38049, 53.8126106, 61.9122925",
				"-1163.25732, 15.371376, -157.695557",
				"-1164.39722, 29.3240414, -264.488861",
				"-1151.82324, -3.63611174, -476.748291",
				"-1130.29102, 51.0637398, -500.587097",
				"-1134.29333, 3.41842651, -514.594604",
				"-818.693176, 119.143799, -137.113464",
				"-838.018433, 250.209747, -272.529572",
				"-932.873779, 176.524796, -261.129913",
				"-743.027527, 58.7032776, -101.758644",
				"-849.356445, -5.4114151, -34.4567108",
			}
	
			-- Convertir les chaînes CFrame en objets CFrame
			local CFrames = {}
			for _, cframeStr in pairs(CFramesRaw) do
				local x, y, z = cframeStr:match("([^,]+),([^,]+),([^,]+)")
				table.insert(CFrames, CFrame.new(tonumber(x), tonumber(y), tonumber(z)))
			end
	
			local function isPlayerSittingOnSeat(seat)
				return seat:IsA("Seat") and seat.Occupant ~= nil
			end
	
			local function teleportPlayer(destination)
				player.Character.HumanoidRootPart.CFrame = destination
			end
	
			-- Assurez-vous que le chemin vers le modèle est correct
			local model = Workspace.EquippedStorage.Accessories[player.Name]["Ice's UFO"].Model
			local seats = {}
	
			for _, child in pairs(model:GetDescendants()) do
				if child:IsA("Seat") or child:IsA("VehicleSeat") then
					table.insert(seats, child)
				end
			end
	
			local playerWasSitting = false
	
	
	
			local onMessageDoneFiltering = defaultChatSystemChatEvents:FindFirstChild("OnMessageDoneFiltering");
	
			function isPlayerSitting(player)
				for _, seat in pairs(seats) do
					if seat:IsA("Seat") or seat:IsA("VehicleSeat") then
						local occupant = seat.Occupant
						if occupant and occupant.Parent == player.Character then
							return true
						end
					end
				end
				return false
			end
	
			onMessageDoneFiltering.OnClientEvent:Connect(function(messageData)
	
	
				local speakerName, message = messageData.FromSpeaker, messageData.Message
				local speaker = players:FindFirstChild(speakerName)
				if message:lower() == "metab" or message:lower() == "1" or message:lower() == "Metab!" or message:lower() == "metab!" then
					local speakerCharacter = speaker.Character
					if speakerCharacter then
						local speakerHumanoidRootPart = speakerCharacter:FindFirstChild("HumanoidRootPart")
						if speakerHumanoidRootPart then
							player.Character.HumanoidRootPart.CFrame = speakerHumanoidRootPart.CFrame
						end
					end
				elseif message:lower() == "chest" or message:lower() == "chests" or message:lower() == "Chest" or message:lower() == "Chests" then
					local randomIndex = math.random(#CFrames)
					player.Character.HumanoidRootPart.CFrame = CFrames[randomIndex]
				elseif message:lower() ==  "Badge?" or message:lower() == "Badge!" or message:lower() == "badge" or message:lower() == "badge?" then -- remplacez "nouvelle_condition" par la condition que vous voulez ajouter
					player.Character.HumanoidRootPart.CFrame = CFrame.new(-1120.62085, 46.2035141, -464.079468)
			    elseif message:lower() ==  "Secret" or message:lower() == "secret" or message:lower() == "secret!" or message:lower() == "Secret?" then -- remplacez "nouvelle_condition" par la condition que vous voulez ajouter
					player.Character.HumanoidRootPart.CFrame = CFrame.new(5237.79248, 5793.88135, 5231.52539)
				elseif message:lower() ==  "UFO" or message:lower() == "ufo" or message:lower() == "UFO?" or message:lower() == "ufo?" then -- remplacez "nouvelle_condition" par la condition que vous voulez ajouter
					local function checkForCaptured()
						local ghostHuntingWorkspace = game:GetService("Workspace").GhostHuntingWorkspace
						local descendants = ghostHuntingWorkspace:GetDescendants()
	
						for _, descendant in pairs(descendants) do
							if descendant:IsA("TextLabel") and descendant.Text == "Captured" then
								local thirdParent = descendant.Parent.Parent.Parent
	
								if thirdParent.Name == "Forcefield" then
									local targetCFrame = thirdParent.CFrame
									local humanoidRootPart = player.Character.HumanoidRootPart
	
									humanoidRootPart.CFrame = targetCFrame
									print("LocalPlayer téléporté au ForceField trouvé:", thirdParent:GetFullName())
								end
							end
						end
					end
	end
			end);
	
	
	
	
			while isEnabled do
				wait(0.2)
				local playerIsSitting = false
	
				for _, seat in pairs(seats) do
					if isPlayerSittingOnSeat(seat) then
						playerIsSitting = true
						break
					end
				end
	
				if not playerIsSitting and playerWasSitting then
					teleportPlayer(CFrame.new(-581.226379, 102.739937, -782.360901))
				end
	
				playerWasSitting = playerIsSitting
			end
	
	end
	end
	
			parent.MouseButton1Click:Connect(onClick)
	
	
	end
end)
